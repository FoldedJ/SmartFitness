{"remainingRequest":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\SmartFitness\\smart-fitness-view\\src\\views\\user\\Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\SmartFitness\\smart-fitness-view\\src\\views\\user\\Main.vue","mtime":1749644684792},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749639512193},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1749639511518},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749639512193},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1749639525774}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Main.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n    <div class=\"user-container\">\n        <div class=\"menus-container\"\n            style=\"position: sticky;top: 0;z-index: 1000;background-color: rgb(255, 255, 255);\">\n            <UserMenu :menus=\"routers\" :userInfo=\"userInfo\" @eventListener=\"eventListener\" />\n        </div>\n        <div class=\"content-container\">\n            <router-view class=\"route-container\"></router-view>\n        </div>\n        <!-- 个人中心 -->\n        <el-dialog :show-close=\"false\" :visible.sync=\"dialogOperaion\" width=\"26%\">\n            <div slot=\"title\" style=\"padding: 25px 0 0 20px;\">\n                <span style=\"font-size: 18px;font-weight: 800;\">个人中心</span>\n            </div>\n            <el-row style=\"padding: 10px 20px 20px 20px;\">\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;margin-bottom: 10px;\">\n                        <span class=\"modelName\">*头像</span>\n                    </p>\n                    <el-upload class=\"avatar-uploader\" action=\"http://localhost:21090/api/smart-fitness/v1.0/file/upload\"\n                        :show-file-list=\"false\" :on-success=\"handleAvatarSuccess\">\n                        <img v-if=\"data.url\" :src=\"data.url\" class=\"avatar\">\n                        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n                    </el-upload>\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;\">\n                        <span class=\"modelName\">*用户名</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"text\" v-model=\"data.name\" placeholder=\"用户名\">\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;\">\n                        <span class=\"modelName\">*个人邮箱</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"text\" v-model=\"data.email\" placeholder=\"个人邮箱\">\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;\">\n                        <span class=\"modelName\">出生日期</span>\n                    </p>\n                    <el-date-picker\n                        class=\"modelInput\"\n                        v-model=\"data.birthDate\"\n                        type=\"date\"\n                        placeholder=\"选择出生日期\"\n                        format=\"yyyy-MM-dd\"\n                        value-format=\"yyyy-MM-dd\">\n                    </el-date-picker>\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;\">\n                        <span class=\"modelName\">性别</span>\n                    </p>\n                    <el-select\n                        class=\"modelInput\"\n                        v-model=\"data.gender\"\n                        placeholder=\"选择性别\"\n                        :disabled=\"userInfo.gender !== null && userInfo.gender !== undefined && userInfo.gender !== ''\">\n                        <el-option label=\"男\" value=\"男\"></el-option>\n                        <el-option label=\"女\" value=\"女\"></el-option>\n                        <el-option label=\"其他\" value=\"其他\"></el-option>\n                    </el-select>\n                    <p v-if=\"userInfo.gender !== null && userInfo.gender !== undefined && userInfo.gender !== ''\" style=\"font-size: 12px;color: #909399;margin-top: 5px;\">\n                        性别一旦设置后不可修改\n                    </p>\n                </el-row>\n            </el-row>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(241, 241, 241);border: none;\"\n                    @click=\"dialogOperaion = false\">取 消</el-button>\n                <el-button size=\"small\" style=\"background-color: #15559a;border: none;\" class=\"customer\" type=\"info\"\n                    @click=\"updateUserInfo\">修改</el-button>\n            </span>\n        </el-dialog>\n        <!-- 重置密码 -->\n        <el-dialog :show-close=\"false\" :visible.sync=\"dialogRetPwdOperaion\" width=\"26%\">\n            <div slot=\"title\" style=\"padding: 25px 0 0 20px;\">\n                <span style=\"font-size: 18px;font-weight: 800;\">重置密码</span>\n            </div>\n            <el-row style=\"padding: 10px 20px 20px 20px;\">\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;margin-bottom: 10px;\">\n                        <span class=\"modelName\">*原始密码</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"password\" v-model=\"pwdEntity.oldPwd\" placeholder=\"原始密码\">\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;margin-bottom: 10px;\">\n                        <span class=\"modelName\">*新密码</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"password\" v-model=\"pwdEntity.newPwd\" placeholder=\"新密码\">\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;margin-bottom: 10px;\">\n                        <span class=\"modelName\">*确认密码</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"password\" v-model=\"pwdEntity.againPwd\" placeholder=\"确认密码\">\n                </el-row>\n            </el-row>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(241, 241, 241);border: none;\"\n                    @click=\"dialogRetPwdOperaion = false\">取 消</el-button>\n                <el-button size=\"small\" style=\"background-color: #15559a;border: none;\" class=\"customer\" type=\"info\"\n                    @click=\"updateUserPwd\">修改</el-button>\n            </span>\n        </el-dialog>\n        <!-- 记录健康指标 -->\n        <el-dialog :visible.sync=\"healthModelConfigDialog\" width=\"28%\" :show-close=\"false\">\n            <div slot=\"title\">\n                <p style=\"color: rgba(0, 1, 4, 0.8);margin: 0;padding: 20px;font-size: 18px;font-weight: 600;\">\n                    记录健康指标</p>\n            </div>\n            <div style=\"padding: 10px 20px;\">\n                <el-row>\n                    <el-col :span=\"6\">\n                        <span @click=\"addUserHealthHistory\"\n                            style=\"margin-top: 10px;display: inline-block;color: white;background-color: #15559a;padding: 5px 8px;border-radius: 3px;font-size: 12px;\">\n                            <i class=\"el-icon-circle-plus\"></i>\n                            确认提交\n                        </span>\n                    </el-col>\n                    <el-col :span=\"18\">\n                        <label for=\"nutrition-select\">选择健康指标</label>\n                        <select id=\"nutrition-select\" v-model=\"selecedHealthModelIndex\" @change=\"healthModelChange\">\n                            <option v-for=\"option in healthModelConfig\" :key=\"option.modelName\" :value=\"option.id\">\n                                {{ option.modelName }}\n                            </option>\n                        </select>\n                    </el-col>\n                </el-row>\n            </div>\n            <div style=\"padding: 10px 20px;\">\n                <el-row v-for=\"(healthModel, index) in isCheckHealthModelConfig\" :key=\"index\"\n                    style=\"border-bottom: 1px solid #f1f1f1;padding: 15px 0;\">\n                    <el-col :span=\"4\">\n                        <img style=\"width: 90%;height: 60px;border-radius: 5px;margin-top: 26px;\"\n                            :src=\"healthModel.modelIcon\" />\n                    </el-col>\n                    <el-col :span=\"20\" style=\"padding: 0 20px;\">\n                        <div>\n                            <input class=\"modelInput\" type=\"text\" v-model=\"healthModel.input\" placeholder=\"数值\">\n                            <span>{{ healthModel.modelUnit }}</span>\n                        </div>\n                        <div style=\"margin: 10px 5px;\">\n                            <div style=\"font-size: 16px;\">\n                                <span>{{ healthModel.modelName }} - {{ healthModel.modelSymbol }}</span>\n                            </div>\n                            <div style=\"margin-top: 6px;\">\n                                <span class=\"removeFood\" @click=\"removeHealthModel(healthModel)\">\n                                    <i class=\"el-icon-circle-close\"></i>\n                                    移除\n                                </span>\n                            </div>\n                        </div>\n                    </el-col>\n                </el-row>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport { clearToken } from \"@/utils/storage.js\";\nimport router from \"@/router\";\nimport UserMenu from '@/components/LevelMenu.vue';\n\nexport default {\n    name: \"UserMain\",\n    components: {\n        UserMenu\n    },\n    data() {\n        return {\n            userInfo: {},\n            data: {},\n            pwdEntity: { oldPwd: '', newPwd: '', againPwd: '' },\n            dialogOperaion: false,\n            dialogRetPwdOperaion: false,\n            foodList: [],\n            routers: [],\n            isCheckFood: [],\n            isCheckHealthModelConfig: [],\n            healthModelConfig: [],\n            selecedFoodIndex: 0,\n            selecedHealthModelIndex: 0,\n            dietDialog: false,\n            healthModelConfigDialog: false\n        };\n    },\n    created() {\n        this.tokenCheckLoad();\n    },\n    methods: {\n        healthModelChange() {\n            const healthModel = this.healthModelConfig[this.selecedHealthModelIndex - 2];\n            const exists = this.isCheckHealthModelConfig.some(item => item.id === healthModel.id);\n            // 如果不存在，则添加新选的健康配置项\n            if (!exists) {\n                this.isCheckHealthModelConfig.unshift(healthModel);\n            } else {\n                console.log(\"指标项已经添加\");\n            }\n        },\n        updateUserPwd() {\n            this.resetPwd();\n        },\n        async updateUserInfo() {\n            try {\n                const userUpdateDTO = {\n                    userAvatar: this.data.url,\n                    userName: this.data.name,\n                    userEmail: this.data.email,\n                    birthDate: this.data.birthDate\n                }\n                \n                // 只有当性别为空时才允许更新性别\n                if (this.userInfo.gender === null || this.userInfo.gender === undefined || this.userInfo.gender === '') {\n                    userUpdateDTO.gender = this.data.gender;\n                }\n                \n                const resposne = await this.$axios.put(`/user/update`, userUpdateDTO);\n                const { data } = resposne;\n                if (data.code === 200) {\n                    this.dialogOperaion = false;\n                    this.tokenCheckLoad();\n                    this.$swal.fire({\n                        title: '修改个人信息',\n                        text: data.msg,\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 1000,\n                    });\n                }\n            } catch (e) {\n                this.dialogOperaion = false;\n                this.$swal.fire({\n                    title: '修改个人信息异常',\n                    text: e,\n                    icon: 'error',\n                    showConfirmButton: false,\n                    timer: 2000,\n                });\n                console.error(`修改个人信息异常:${e}`);\n            }\n        },\n        async resetPwd() {\n            try {\n                const { oldPwd, newPwd, againPwd } = this.pwdEntity;\n                if (!oldPwd || !newPwd || !againPwd) {\n                    this.$message(`任意项不为空`);\n                    return;\n                }\n                if (newPwd !== againPwd) {\n                    this.$message(`前后密码输入不一致`);\n                    return;\n                }\n                const pwdDTO = {\n                    oldPwd: this.$md5(this.$md5(oldPwd)),\n                    newPwd: this.$md5(this.$md5(newPwd))\n                }\n                const resposne = await this.$axios.put(`/user/updatePwd`, pwdDTO);\n                const { data } = resposne;\n                if (data.code === 200) {\n                    this.dialogRetPwdOperaion = false;\n                    this.$swal.fire({\n                        title: '修改密码',\n                        text: data.msg,\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 1000,\n                    });\n                    setTimeout(() => {\n                        clearToken();\n                        this.$router.push(`/login`);\n                    }, 1200)\n                } else {\n                    this.$message.error(data.msg);\n                }\n            } catch (e) {\n                this.dialogOperaion = false;\n                this.$error(data.msg);\n                console.error(`修改密码异常:${e}`);\n            }\n        },\n        handleAvatarSuccess(res, file) {\n            if (res.code !== 200) {\n                this.$message.error(`头像上传异常`);\n                return;\n            }\n            this.$message.success(`头像上传成功`);\n            this.data.url = res.data;\n        },\n        // 监听菜单点击事件\n        eventListener(event) {\n            // 个人中心\n            if (event === 'center') {\n                this.dialogOperaion = true;\n                this.data = JSON.parse(JSON.stringify(this.userInfo));\n            }\n            // 密码重置\n            else if (event === 'resetPwd') {\n                this.dialogRetPwdOperaion = true;\n            }\n            // 搜索页搜索\n            else if (event === 'search-detail') {\n                this.$router.push('/search-detail');\n            }\n            // 退出登录\n            else if (event === 'loginOut') {\n                this.loginOutOperation();\n            }\n            // 健康指标记录\n            else if (event === 'healthDataRecord') {\n                this.healthModelConfigDialog = true;\n            }\n            // 饮食记录\n            else if (event === 'dietRecord') {\n                this.$router.push('/user/diet-record');\n            }\n        },\n        removeHealthModel(healthModel) {\n            // 清空输入项\n            healthModel.input = '';\n            this.isCheckHealthModelConfig = this.isCheckHealthModelConfig.filter(item => item.id !== healthModel.id);\n        },\n        // 提交健康指标记录\n        async addUserHealthHistory() {\n            const healthModels = this.isCheckHealthModelConfig.map(entity => {\n                return {\n                    healthModelId: entity.id,\n                    inputValue: entity.input\n                }\n            });\n            try {\n                const response = await this.$axios.post(`/user-health/save`, healthModels);\n                const { data } = response;\n                if (data.code === 200) {\n                    this.healthModelConfigDialog = false;\n                    this.isCheckHealthModelConfig = [];\n                    this.$swal.fire({\n                        title: '记录健康指标',\n                        text: '记录成功',\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 1500,\n                    });\n                }\n            } catch (e) {\n                console.error(`记录健康指标异常`, e);\n            }\n        },\n        async loadHealthModelConfigList() {\n            try {\n                const response = await this.$axios.post(`/health-model-config/list`, {});\n                const { data } = response;\n                this.healthModelConfig = data.data;\n            } catch (e) {\n                console.error(`查询健康配置异常：`, e);\n            }\n        },\n        async loginOutOperation() {\n            const confirmed = await this.$swalConfirm({\n                title: '退出登录',\n                text: `退出登录后，需重新登录才能使用系统功能!`,\n                icon: 'warning',\n            });\n            if (confirmed) { // 清除Token，路由至登录页\n                clearToken();\n                this.$router.push('/login');\n            }\n        },\n        // Token检验\n        async tokenCheckLoad() {\n            try {\n                const res = await this.$axios.get('user/auth');\n                // 校验失败\n                if (res.data.code === 400) {\n                    clearToken();\n                    this.$message.error(res.data.msg);\n                    this.$router.push('/login');\n                    return;\n                }\n                const { id: userId, userAvatar, userName, userRole, userEmail, birthDate, gender } = res.data.data;\n                // 将用户信息存储起来\n                sessionStorage.setItem('userInfo', JSON.stringify(res.data.data));\n                this.userInfo = {\n                    url: userAvatar,\n                    name: userName,\n                    role: userRole,\n                    email: userEmail,\n                    birthDate: birthDate,\n                    gender: gender\n                };\n                this.data = { ...this.userInfo };\n                // 根据角色解析路由\n                const roleRouteKey = userRole === 1 ? 'admin' : 'user';\n                const roleRoute = router.options.routes.find(route => route.path.startsWith(`/${roleRouteKey}`));\n                if (roleRoute) {\n                    this.routers = roleRoute.children;\n                } else {\n                    console.error('未能找到对应角色的路由配置');\n                }\n            } catch (error) {\n                console.error('Token检验时发生错误:', error);\n            }\n        }\n    },\n};\n</script>\n\n<style scoped lang=\"scss\">\n#nutrition-select {\n    margin: 10px;\n    padding: 5px;\n    font-size: 16px;\n    border: none;\n    outline: none;\n    width: 60%;\n    font-size: 14px;\n    color: rgba(0, 0, 0, 0.6);\n}\n\n.removeFood {\n    color: rgba(0, 0, 0, 0.6);\n    user-select: none;\n    cursor: pointer;\n    display: inline-block;\n    margin-top: 10px;\n}\n\n.removeFood:hover {\n    color: #1c1c1c;\n}\n\nlabel {\n    font-size: 14px;\n    color: rgba(0, 0, 0, 0.6);\n}\n\n.content-container {\n    padding: 10px 180px;\n    box-sizing: border-box;\n    min-height: calc(100vh - 200px);\n    overflow-x: hidden;\n}\n\n.modelInput {\n    outline: none;\n    border: none;\n    font-size: 22px;\n    width: 60%;\n    font-weight: 800;\n}\n\n.avatar {\n    width: 88px;\n    height: 88px;\n}\n</style>\n"]}]}