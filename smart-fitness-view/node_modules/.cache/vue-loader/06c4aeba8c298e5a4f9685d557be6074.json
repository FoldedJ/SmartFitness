{"remainingRequest":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\SmartFitness\\smart-fitness-view\\src\\components\\ChatWindow.vue?vue&type=style&index=0&id=3af19f98&scoped=true&lang=scss&","dependencies":[{"path":"E:\\SmartFitness\\smart-fitness-view\\src\\components\\ChatWindow.vue","mtime":1750052992151},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1749639516075},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1749639525775},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1749639521038},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1749639524214},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749639512193},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1749639525774}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2hhdC13aW5kb3cgewogIHBvc2l0aW9uOiBmaXhlZDsKICBib3R0b206IDIwcHg7CiAgcmlnaHQ6IDIwcHg7CiAgd2lkdGg6IDM1MHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICB6LWluZGV4OiAxMDAwOwogIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7CiAgbWF4LWhlaWdodDogNTAwcHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIAogICYuY2hhdC13aW5kb3ctY29sbGFwc2VkIHsKICAgIG1heC1oZWlnaHQ6IDUwcHg7CiAgfQp9CgouY2hhdC1oZWFkZXIgewogIHBhZGRpbmc6IDEycHggMTVweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5RUZGOwogIGNvbG9yOiB3aGl0ZTsKICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDAgMDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLmNoYXQtYm9keSB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGhlaWdodDogNDAwcHg7Cn0KCi5jaGF0LW1lc3NhZ2VzIHsKICBmbGV4OiAxOwogIHBhZGRpbmc6IDE1cHg7CiAgb3ZlcmZsb3cteTogYXV0bzsKfQoKLm1lc3NhZ2UgewogIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgbWF4LXdpZHRoOiA4MCU7CiAgCiAgJi5zZW50IHsKICAgIG1hcmdpbi1sZWZ0OiBhdXRvOwogICAgCiAgICAubWVzc2FnZS1jb250ZW50IHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQwOUVGRjsKICAgICAgY29sb3I6IHdoaXRlOwogICAgICBib3JkZXItcmFkaXVzOiAxOHB4IDE4cHggMCAxOHB4OwogICAgfQogIH0KICAKICAmLnJlY2VpdmVkIHsKICAgIG1hcmdpbi1yaWdodDogYXV0bzsKICAgIAogICAgLm1lc3NhZ2UtY29udGVudCB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7CiAgICAgIGNvbG9yOiAjMzMzOwogICAgICBib3JkZXItcmFkaXVzOiAxOHB4IDE4cHggMThweCAwOwogICAgfQogIH0KfQoKLm1lc3NhZ2UtY29udGVudCB7CiAgcGFkZGluZzogMTBweCAxNXB4OwogIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7CiAgd2hpdGUtc3BhY2U6IHByZS13cmFwOwp9CgouY2hhdC1pbnB1dCB7CiAgcGFkZGluZzogMTBweDsKICBkaXNwbGF5OiBmbGV4OwogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWVlOwogIAogIC5lbC1pbnB1dCB7CiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgfQp9Cg=="},{"version":3,"sources":["ChatWindow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ChatWindow.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"chat-window\" :class=\"{ 'chat-window-collapsed': collapsed }\">\n    <div class=\"chat-header\" @click=\"toggleCollapse\">\n      <span>智能助手</span>\n      <i :class=\"collapsed ? 'el-icon-arrow-up' : 'el-icon-arrow-down'\"></i>\n    </div>\n    <div v-show=\"!collapsed\" class=\"chat-body\">\n      <div class=\"chat-messages\" ref=\"messagesContainer\">\n        <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\" :class=\"message.type\">\n          <div class=\"message-content\">{{ message.content }}</div>\n        </div>\n      </div>\n      <div class=\"chat-input\">\n        <el-input\n          v-model=\"inputMessage\"\n          placeholder=\"请输入您的问题...\"\n          @keyup.enter.native=\"sendMessage\"\n          :disabled=\"loading\"\n        ></el-input>\n        <el-button type=\"primary\" icon=\"el-icon-s-promotion\" @click=\"sendMessage\" :loading=\"loading\">发送</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { executeWorkflow } from '@/api/coze';\n\nexport default {\n  name: 'ChatWindow',\n  props: {\n    // 不再需要workflowId属性\n  },\n  data() {\n    return {\n      collapsed: true,\n      inputMessage: '',\n      messages: [\n        {\n          type: 'received',\n          content: '您好！我是您的智能健康助手，有什么可以帮助您的吗？'\n        }\n      ],\n      loading: false\n    };\n  },\n  methods: {\n    toggleCollapse() {\n      this.collapsed = !this.collapsed;\n    },\n    async sendMessage() {\n      if (!this.inputMessage.trim() || this.loading) return;\n      \n      // 添加用户消息到聊天窗口\n      this.messages.push({\n        type: 'sent',\n        content: this.inputMessage\n      });\n      \n      const userInput = this.inputMessage;\n      this.inputMessage = '';\n      this.loading = true;\n      \n      // 添加加载消息\n      const loadingMsgIndex = this.messages.length;\n      this.messages.push({\n        type: 'received',\n        content: '正在思考中...'\n      });\n      \n      try {\n        // 调用Coze工作流API\n        const response = await executeWorkflow(userInput);\n        \n        // 在控制台输出完整的响应对象，用于调试\n        console.log('收到的完整响应:', response);\n        console.log('响应的data字段:', response.data);\n        \n        // 处理响应数据\n        let responseContent = '';\n        if (response && response.data && response.data.code === 200) {\n          // 直接使用后端返回的数据，不再尝试解析JSON\n          responseContent = response.data.data;\n          console.log('使用的响应内容:', responseContent);\n        } else if (response && response.data && response.data.message) {\n          responseContent = response.data.message;\n          console.log('使用的错误消息:', responseContent);\n        } else {\n          responseContent = '收到响应，但无法解析内容';\n          console.log('无法解析响应内容');\n        }\n        \n        // 更新加载消息为实际响应\n        this.messages.splice(loadingMsgIndex, 1, {\n          type: 'received',\n          content: responseContent\n        });\n      } catch (error) {\n        // 更新加载消息为错误信息\n        this.messages.splice(loadingMsgIndex, 1, {\n          type: 'received',\n          content: '抱歉，我遇到了一些问题：' + (error.message || '未知错误')\n        });\n        console.error('执行工作流出错:', error);\n      } finally {\n        this.loading = false;\n        this.$nextTick(() => {\n          this.scrollToBottom();\n        });\n      }\n    },\n    scrollToBottom() {\n      const container = this.$refs.messagesContainer;\n      if (container) {\n        container.scrollTop = container.scrollHeight;\n      }\n    }\n  },\n  updated() {\n    this.scrollToBottom();\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.chat-window {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 350px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  transition: all 0.3s ease;\n  max-height: 500px;\n  display: flex;\n  flex-direction: column;\n  \n  &.chat-window-collapsed {\n    max-height: 50px;\n  }\n}\n\n.chat-header {\n  padding: 12px 15px;\n  background-color: #409EFF;\n  color: white;\n  border-radius: 8px 8px 0 0;\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.chat-body {\n  display: flex;\n  flex-direction: column;\n  height: 400px;\n}\n\n.chat-messages {\n  flex: 1;\n  padding: 15px;\n  overflow-y: auto;\n}\n\n.message {\n  margin-bottom: 10px;\n  max-width: 80%;\n  \n  &.sent {\n    margin-left: auto;\n    \n    .message-content {\n      background-color: #409EFF;\n      color: white;\n      border-radius: 18px 18px 0 18px;\n    }\n  }\n  \n  &.received {\n    margin-right: auto;\n    \n    .message-content {\n      background-color: #f2f2f2;\n      color: #333;\n      border-radius: 18px 18px 18px 0;\n    }\n  }\n}\n\n.message-content {\n  padding: 10px 15px;\n  word-break: break-word;\n  white-space: pre-wrap;\n}\n\n.chat-input {\n  padding: 10px;\n  display: flex;\n  border-top: 1px solid #eee;\n  \n  .el-input {\n    margin-right: 10px;\n  }\n}\n</style>"]}]}