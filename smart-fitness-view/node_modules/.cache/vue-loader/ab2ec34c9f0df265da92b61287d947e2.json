{"remainingRequest":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\SmartFitness\\smart-fitness-view\\src\\views\\user\\Main.vue?vue&type=style&index=0&id=56500673&scoped=true&lang=css&","dependencies":[{"path":"E:\\SmartFitness\\smart-fitness-view\\src\\views\\user\\Main.vue","mtime":1749372723864},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1748086668003},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1748086671258},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1748086669863},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748086666483},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1748086671258}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi51c2VyLWNvbnRhaW5lciB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBvdmVyZmxvdy14OiBoaWRkZW47Cn0KCi5jb250ZW50LWNvbnRhaW5lciB7CiAgICB3aWR0aDogMTAwJTsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBwYWRkaW5nOiAwIDAgMjBweCAwOwp9Cgoucm91dGUtY29udGFpbmVyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKfQoKLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkIHsKICAgIGJvcmRlcjogMXB4IGRhc2hlZCAjZDlkOWQ5OwogICAgYm9yZGVyLXJhZGl1czogNnB4OwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkOmhvdmVyIHsKICAgIGJvcmRlci1jb2xvcjogIzQwOUVGRjsKfQoKLmF2YXRhci11cGxvYWRlci1pY29uIHsKICAgIGZvbnQtc2l6ZTogMjhweDsKICAgIGNvbG9yOiAjOGM5MzlkOwogICAgd2lkdGg6IDEwMHB4OwogICAgaGVpZ2h0OiAxMDBweDsKICAgIGxpbmUtaGVpZ2h0OiAxMDBweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmF2YXRhciB7CiAgICB3aWR0aDogMTAwcHg7CiAgICBoZWlnaHQ6IDEwMHB4OwogICAgZGlzcGxheTogYmxvY2s7Cn0KCi5tb2RlbE5hbWUgewogICAgY29sb3I6ICMzMzM7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBmb250LXdlaWdodDogNjAwOwp9CgoubW9kZWxJbnB1dCB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogNDBweDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkY2RmZTY7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICBwYWRkaW5nOiAwIDE1cHg7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKfQoKLnJlbW92ZUZvb2QgewogICAgY29sb3I6ICNmNTZjNmM7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoeA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n    <div class=\"user-container\">\n        <div class=\"menus-container\"\n            style=\"position: sticky;top: 0;z-index: 1000;background-color: rgb(255, 255, 255);\">\n            <UserMenu :menus=\"routers\" :userInfo=\"userInfo\" @eventListener=\"eventListener\" />\n        </div>\n        <div class=\"content-container\">\n            <router-view class=\"route-container\"></router-view>\n        </div>\n        <!-- 个人中心 -->\n        <el-dialog :show-close=\"false\" :visible.sync=\"dialogOperaion\" width=\"26%\">\n            <div slot=\"title\" style=\"padding: 25px 0 0 20px;\">\n                <span style=\"font-size: 18px;font-weight: 800;\">个人中心</span>\n            </div>\n            <el-row style=\"padding: 10px 20px 20px 20px;\">\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;margin-bottom: 10px;\">\n                        <span class=\"modelName\">*头像</span>\n                    </p>\n                    <el-upload class=\"avatar-uploader\" action=\"http://localhost:21090/api/smart-fitness/v1.0/file/upload\"\n                        :show-file-list=\"false\" :on-success=\"handleAvatarSuccess\">\n                        <img v-if=\"data.url\" :src=\"data.url\" class=\"avatar\">\n                        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n                    </el-upload>\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;\">\n                        <span class=\"modelName\">*用户名</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"text\" v-model=\"data.name\" placeholder=\"用户名\">\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;\">\n                        <span class=\"modelName\">*个人邮箱</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"text\" v-model=\"data.email\" placeholder=\"个人邮箱\">\n                </el-row>\n            </el-row>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(241, 241, 241);border: none;\"\n                    @click=\"dialogOperaion = false\">取 消</el-button>\n                <el-button size=\"small\" style=\"background-color: #15559a;border: none;\" class=\"customer\" type=\"info\"\n                    @click=\"updateUserInfo\">修改</el-button>\n            </span>\n        </el-dialog>\n        <!-- 重置密码 -->\n        <el-dialog :show-close=\"false\" :visible.sync=\"dialogRetPwdOperaion\" width=\"26%\">\n            <div slot=\"title\" style=\"padding: 25px 0 0 20px;\">\n                <span style=\"font-size: 18px;font-weight: 800;\">重置密码</span>\n            </div>\n            <el-row style=\"padding: 10px 20px 20px 20px;\">\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;margin-bottom: 10px;\">\n                        <span class=\"modelName\">*原始密码</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"password\" v-model=\"pwdEntity.oldPwd\" placeholder=\"原始密码\">\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;margin-bottom: 10px;\">\n                        <span class=\"modelName\">*新密码</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"password\" v-model=\"pwdEntity.newPwd\" placeholder=\"新密码\">\n                </el-row>\n                <el-row>\n                    <p style=\"font-size: 12px;padding: 3px 0;margin-bottom: 10px;\">\n                        <span class=\"modelName\">*确认密码</span>\n                    </p>\n                    <input class=\"modelInput\" type=\"password\" v-model=\"pwdEntity.againPwd\" placeholder=\"确认密码\">\n                </el-row>\n            </el-row>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(241, 241, 241);border: none;\"\n                    @click=\"dialogRetPwdOperaion = false\">取 消</el-button>\n                <el-button size=\"small\" style=\"background-color: #15559a;border: none;\" class=\"customer\" type=\"info\"\n                    @click=\"updateUserPwd\">修改</el-button>\n            </span>\n        </el-dialog>\n        <!-- 记录饮食 -->\n        <el-dialog :visible.sync=\"dietDialog\" width=\"28%\" :show-close=\"false\">\n            <div slot=\"title\">\n                <p style=\"color: rgba(0, 1, 4, 0.8);margin: 0;padding: 20px;font-size: 18px;font-weight: 600;\">\n                    记录饮食</p>\n            </div>\n            <div style=\"padding: 10px 20px;\">\n                <el-row>\n                    <el-col :span=\"6\">\n                        <span @click=\"addDietHistory\"\n                            style=\"margin-top: 10px;display: inline-block;color: white;background-color: #15559a;padding: 5px 8px;border-radius: 3px;font-size: 12px;\">\n                            <i class=\"el-icon-circle-plus\"></i>\n                            确认提交\n                        </span>\n                    </el-col>\n                    <el-col :span=\"18\">\n                        <label for=\"food-select\">选择食物</label>\n                        <select id=\"food-select\" v-model=\"selecedFoodIndex\" @change=\"foodChange\">\n                            <option v-for=\"(option, index) in foodList\" :key=\"option.id\" :value=\"index + 1\">\n                                {{ option.name }}\n                            </option>\n                        </select>\n                    </el-col>\n                </el-row>\n            </div>\n            <div style=\"padding: 10px 20px;\">\n                <el-row v-for=\"(checkFood, index) in isCheckFood\" :key=\"index\">\n                    <el-col :span=\"10\">\n                        <img style=\"width: 100%;height: 100px;border-radius: 5px;\" :src=\"checkFood.cover\" />\n                    </el-col>\n                    <el-col :span=\"14\" style=\"padding: 0 20px;\">\n                        <div>\n                            <input class=\"modelInput\" type=\"text\" v-model=\"checkFood.mgValue\" placeholder=\"克数\">\n                            <span>克</span>\n                        </div>\n                        <div style=\"margin: 10px 5px;\">\n                            <div style=\"font-size: 16px;\">\n                                <span>{{ checkFood.name }} - {{ checkFood.tag }}</span>\n                            </div>\n                            <div style=\"margin-top: 6px;\">\n                                <span class=\"removeFood\" @click=\"removeFood(checkFood)\">\n                                    <i class=\"el-icon-circle-close\"></i>\n                                    移除\n                                </span>\n                            </div>\n                        </div>\n                    </el-col>\n                </el-row>\n            </div>\n        </el-dialog>\n        <!-- 记录健康指标 -->\n        <el-dialog :visible.sync=\"healthModelConfigDialog\" width=\"28%\" :show-close=\"false\">\n            <div slot=\"title\">\n                <p style=\"color: rgba(0, 1, 4, 0.8);margin: 0;padding: 20px;font-size: 18px;font-weight: 600;\">\n                    记录健康指标</p>\n            </div>\n            <div style=\"padding: 10px 20px;\">\n                <el-row>\n                    <el-col :span=\"6\">\n                        <span @click=\"addUserHealthHistory\"\n                            style=\"margin-top: 10px;display: inline-block;color: white;background-color: #15559a;padding: 5px 8px;border-radius: 3px;font-size: 12px;\">\n                            <i class=\"el-icon-circle-plus\"></i>\n                            确认提交\n                        </span>\n                    </el-col>\n                    <el-col :span=\"18\">\n                        <label for=\"nutrition-select\">选择健康指标</label>\n                        <select id=\"nutrition-select\" v-model=\"selecedHealthModelIndex\" @change=\"healthModelChange\">\n                            <option v-for=\"option in healthModelConfig\" :key=\"option.modelName\" :value=\"option.id\">\n                                {{ option.modelName }}\n                            </option>\n                        </select>\n                    </el-col>\n                </el-row>\n            </div>\n            <div style=\"padding: 10px 20px;\">\n                <el-row v-for=\"(healthModel, index) in isCheckHealthModelConfig\" :key=\"index\"\n                    style=\"border-bottom: 1px solid #f1f1f1;padding: 15px 0;\">\n                    <el-col :span=\"4\">\n                        <img style=\"width: 90%;height: 60px;border-radius: 5px;margin-top: 26px;\"\n                            :src=\"healthModel.modelIcon\" />\n                    </el-col>\n                    <el-col :span=\"20\" style=\"padding: 0 20px;\">\n                        <div>\n                            <input class=\"modelInput\" type=\"text\" v-model=\"healthModel.input\" placeholder=\"数值\">\n                            <span>{{ healthModel.modelUnit }}</span>\n                        </div>\n                        <div style=\"margin: 10px 5px;\">\n                            <div style=\"font-size: 16px;\">\n                                <span>{{ healthModel.modelName }} - {{ healthModel.modelSymbol }}</span>\n                            </div>\n                            <div style=\"margin-top: 6px;\">\n                                <span class=\"removeFood\" @click=\"removeHealthModel(healthModel)\">\n                                    <i class=\"el-icon-circle-close\"></i>\n                                    移除\n                                </span>\n                            </div>\n                        </div>\n                    </el-col>\n                </el-row>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport { clearToken } from \"@/utils/storage.js\";\nimport router from \"@/router\";\nimport UserMenu from '@/components/LevelMenu.vue';\nexport default {\n    name: \"UserMain\",\n    components: {\n        UserMenu\n    },\n    data() {\n        return {\n            userInfo: {},\n            data: {},\n            pwdEntity: { oldPwd: '', newPwd: '', againPwd: '' },\n            dialogOperaion: false,\n            dialogRetPwdOperaion: false,\n            foodList: [],\n            routers: [],\n            isCheckFood: [],\n            isCheckHealthModelConfig: [],\n            healthModelConfig: [],\n            selecedFoodIndex: 0,\n            selecedHealthModelIndex: 0,\n            dietDialog: false,\n            healthModelConfigDialog: false\n        };\n    },\n    created() {\n        this.tokenCheckLoad();\n    },\n    methods: {\n        healthModelChange() {\n            const healthModel = this.healthModelConfig[this.selecedHealthModelIndex - 2];\n            const exists = this.isCheckHealthModelConfig.some(item => item.id === healthModel.id);\n            // 如果不存在，则添加新选的健康配置项\n            if (!exists) {\n                this.isCheckHealthModelConfig.unshift(healthModel);\n            } else {\n                console.log(\"指标项已经添加\");\n            }\n        },\n        updateUserPwd() {\n            this.resetPwd();\n        },\n        async updateUserInfo() {\n            try {\n                const userUpdateDTO = {\n                    userAvatar: this.data.url,\n                    userName: this.data.name,\n                    userEmail: this.data.email\n                }\n                const resposne = await this.$axios.put(`/user/update`, userUpdateDTO);\n                const { data } = resposne;\n                if (data.code === 200) {\n                    this.dialogOperaion = false;\n                    this.tokenCheckLoad();\n                    this.$swal.fire({\n                        title: '修改个人信息',\n                        text: data.msg,\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 1000,\n                    });\n                }\n            } catch (e) {\n                this.dialogOperaion = false;\n                this.$swal.fire({\n                    title: '修改个人信息异常',\n                    text: e,\n                    icon: 'error',\n                    showConfirmButton: false,\n                    timer: 2000,\n                });\n                console.error(`修改个人信息异常:${e}`);\n            }\n        },\n        async resetPwd() {\n            try {\n                const { oldPwd, newPwd, againPwd } = this.pwdEntity;\n                if (!oldPwd || !newPwd || !againPwd) {\n                    this.$message(`任意项不为空`);\n                    return;\n                }\n                if (newPwd !== againPwd) {\n                    this.$message(`前后密码输入不一致`);\n                    return;\n                }\n                const pwdDTO = {\n                    oldPwd: this.$md5(this.$md5(oldPwd)),\n                    newPwd: this.$md5(this.$md5(newPwd))\n                }\n                const resposne = await this.$axios.put(`/user/updatePwd`, pwdDTO);\n                const { data } = resposne;\n                if (data.code === 200) {\n                    this.dialogRetPwdOperaion = false;\n                    this.$swal.fire({\n                        title: '修改密码',\n                        text: data.msg,\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 1000,\n                    });\n                    setTimeout(() => {\n                        clearToken();\n                        this.$router.push(`/login`);\n                    }, 1200)\n                } else {\n                    this.$message.error(data.msg);\n                }\n            } catch (e) {\n                this.dialogOperaion = false;\n                this.$error(data.msg);\n                console.error(`修改密码异常:${e}`);\n            }\n        },\n        handleAvatarSuccess(res, file) {\n            if (res.code !== 200) {\n                this.$message.error(`头像上传异常`);\n                return;\n            }\n            this.$message.success(`头像上传成功`);\n            this.data.url = res.data;\n        },\n        // 监听菜单点击事件\n        eventListener(event) {\n            // 个人中心\n            if (event === 'center') {\n                this.dialogOperaion = !this.dialogOperaion;\n            }\n            // 密码重置\n            else if (event === 'resetPwd') {\n                this.dialogRetPwdOperaion = true;\n                // 搜索页搜索\n            } else if (event === 'search-detail') {\n                this.$router.push('/search-detail');\n            }\n            // 退出登录\n            else if (event === 'loginOut') {\n                this.loginOutOperation();\n            }\n            // 健康指标记录\n            else if (event === 'healthDataRecord') {\n                this.$router.push('/record');\n            }\n            // 记录饮食\n            else if (event === 'dietRecord') {\n                this.dietDialog = true;\n                this.loadFoodList();\n            }\n        },\n        removeFood(food) {\n            // 清空输入项\n            food.mgValue = '';\n            this.isCheckFood = this.isCheckFood.filter(item => item.id !== food.id);\n        },\n        removeHealthModel(healthModel) {\n            // 清空输入项\n            healthModel.input = '';\n            this.isCheckHealthModelConfig = this.isCheckHealthModelConfig.filter(item => item.id !== healthModel.id);\n        },\n        foodChange() {\n            const food = this.foodList[this.selecedFoodIndex - 1];\n            const exists = this.isCheckFood.some(item => item.id === food.id);\n            // 如果不存在，则添加新选的菜单\n            if (!exists) {\n                this.isCheckFood.unshift(food);\n            } else {\n                console.log(\"菜谱已经添加\");\n            }\n        },\n        // 提交饮食记录\n        async addUserHealthHistory() {\n            const healthModels = this.isCheckHealthModelConfig.map(entity => {\n                return {\n                    healthModelId: entity.id,\n                    inputValue: entity.input\n                }\n            });\n            try {\n                const response = await this.$axios.post(`/user-health/save`, healthModels);\n                const { data } = response;\n                if (data.code === 200) {\n                    this.healthModelConfigDialog = false;\n                    this.isCheckHealthModelConfig = [];\n                    this.$swal.fire({\n                        title: '记录健康指标',\n                        text: '记录成功',\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 1500,\n                    });\n                }\n            } catch (e) {\n                console.error(`记录健康指标异常`, e);\n            }\n        },\n        // 提交饮食记录\n        async addDietHistory() {\n            const foodIds = this.isCheckFood.map(entity => entity.id).join(\",\");\n            const foodNum = this.isCheckFood.map(entity => entity.mgValue).join(\",\");\n            const diet = {\n                foodIds: foodIds,\n                foodNum: foodNum\n            }\n            try {\n                const response = await this.$axios.post(`/diet/save`, diet);\n                const { data } = response;\n                if (data.code === 200) {\n                    this.dietDialog = false;\n                    this.isCheckFood = [];\n                    this.$swal.fire({\n                        title: '记录饮食，拥抱生活',\n                        text: data.msg,\n                        icon: 'success',\n                        showConfirmButton: false,\n                        timer: 1500,\n                    });\n                }\n            } catch (e) {\n                console.error(`饮食新增异常：`, e);\n            }\n        },\n        async loadHealthModelConfigList() {\n            try {\n                const response = await this.$axios.post(`/health-model-config/list`, {});\n                const { data } = response;\n                this.healthModelConfig = data.data;\n            } catch (e) {\n                console.error(`查询健康配置异常：`, e);\n            }\n        },\n        async loadFoodList() {\n            try {\n                const response = await this.$axios.post(`/food/list`, {});\n                const { data } = response;\n                this.foodList = data.data;\n            } catch (e) {\n                console.error(`查询饮食配置异常：`, e);\n            }\n        },\n        async loginOutOperation() {\n            const confirmed = await this.$swalConfirm({\n                title: '退出登录',\n                text: `退出登录后，需重新登录才能使用系统功能!`,\n                icon: 'warning',\n            });\n            if (confirmed) { // 清除Token，路由至登录页\n                clearToken();\n                this.$router.push('/login');\n            }\n        },\n        async tokenCheckLoad() {\n            try {\n                const response = await this.$axios.get(`/user/info`);\n                const { data } = response;\n                if (data.code === 200) {\n                    this.userInfo = data.data;\n                    this.data = data.data;\n                    this.loadRouters();\n                }\n            } catch (e) {\n                console.error(`获取用户信息异常:${e}`);\n            }\n        },\n        loadRouters() {\n            const userInfo = this.userInfo;\n            const role = userInfo.role;\n            if (role === '管理员') {\n                this.$router.push('/admin');\n            } else {\n                this.routers = [\n                    {\n                        name: '首页',\n                        path: '/user',\n                        icon: 'el-icon-s-home'\n                    },\n                    {\n                        name: '饮食管理',\n                        path: '/food-management',\n                        icon: 'el-icon-dish'\n                    },\n                    {\n                        name: '健康评估',\n                        path: '/evaluations',\n                        icon: 'el-icon-data-analysis'\n                    },\n                    {\n                        name: '健康资讯',\n                        path: '/news',\n                        icon: 'el-icon-reading'\n                    },\n                    {\n                        name: '消息通知',\n                        path: '/message',\n                        icon: 'el-icon-bell'\n                    }\n                ];\n            }\n        }\n    }\n};\n</script>\n<style scoped>\n.user-container {\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    overflow-x: hidden;\n}\n\n.content-container {\n    width: 100%;\n    box-sizing: border-box;\n    padding: 0 0 20px 0;\n}\n\n.route-container {\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n}\n\n.avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n}\n\n.avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 100px;\n    height: 100px;\n    line-height: 100px;\n    text-align: center;\n}\n\n.avatar {\n    width: 100px;\n    height: 100px;\n    display: block;\n}\n\n.modelName {\n    color: #333;\n    font-size: 14px;\n    font-weight: 600;\n}\n\n.modelInput {\n    width: 100%;\n    height: 40px;\n    border: 1px solid #dcdfe6;\n    border-radius: 4px;\n    padding: 0 15px;\n    margin-bottom: 10px;\n    box-sizing: border-box;\n}\n\n.removeFood {\n    color: #f56c6c;\n    font-size: 12px;\n    cursor: pointer;\n}\n</style>\n"]}]}