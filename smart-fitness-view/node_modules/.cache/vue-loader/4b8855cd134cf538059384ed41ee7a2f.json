{"remainingRequest":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\SmartFitness\\smart-fitness-view\\src\\views\\user\\NutritionRecommendation.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\SmartFitness\\smart-fitness-view\\src\\views\\user\\NutritionRecommendation.vue","mtime":1749563460952},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749639512193},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1749639525774}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IAogIGdlbmVyYXRlTnV0cml0aW9uUmVjb21tZW5kYXRpb24sIAogIGRlbGV0ZU51dHJpdGlvblJlY29tbWVuZGF0aW9ucywKICBnZXRMYXRlc3ROdXRyaXRpb25SZWNvbW1lbmRhdGlvbgp9IGZyb20gJ0AvYXBpL251dHJpdGlvbic7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ051dHJpdGlvblJlY29tbWVuZGF0aW9uJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3VycmVudFJlY29tbWVuZGF0aW9uOiBudWxsLAogICAgICBsb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmxvYWRMYXRlc3RSZWNvbW1lbmRhdGlvbigpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g5Yqg6L295pyA5paw55qE5o6o6I2QCiAgICBhc3luYyBsb2FkTGF0ZXN0UmVjb21tZW5kYXRpb24oKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBnZXRMYXRlc3ROdXRyaXRpb25SZWNvbW1lbmRhdGlvbigpOwogICAgICAgIGNvbnNvbGUubG9nKCfojrflj5bmnIDmlrDmjqjojZDlk43lupQ6JywgcmVzcG9uc2UpOwogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT09IDIwMCAmJiByZXNwb25zZS5kYXRhLmRhdGEpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCfmnIDmlrDmjqjojZDmlbDmja46JywgcmVzcG9uc2UuZGF0YS5kYXRhKTsKICAgICAgICAgIHRoaXMuY3VycmVudFJlY29tbWVuZGF0aW9uID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygn5rKh5pyJ5om+5Yiw5o6o6I2Q5pWw5o2uOicsIHJlc3BvbnNlLmRhdGEubXNnKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcign5Yqg6L295pyA5paw5o6o6I2Q5aSx6LSlOicsIGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIAogICAgLy8g55Sf5oiQ5paw55qE6JCl5YW75o6o6I2QCiAgICBhc3luYyBnZW5lcmF0ZVJlY29tbWVuZGF0aW9uKCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICAvLyDlhYjmmL7npLrkuIDkuKrmj5DnpLrvvIzlkYrnn6XnlKjmiLfnlJ/miJDmjqjojZDlj6/og73pnIDopoHovoPplb/ml7bpl7QKICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCfmraPlnKjnlJ/miJDokKXlhbvmjqjojZDvvIzov5nlj6/og73pnIDopoHkuIDkupvml7bpl7TvvIzor7fogJDlv4PnrYnlvoUuLi4nKTsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGdlbmVyYXRlTnV0cml0aW9uUmVjb21tZW5kYXRpb24oKTsKICAgICAgICBjb25zb2xlLmxvZygn55Sf5oiQ5o6o6I2Q5ZON5bqUOicsIHJlc3BvbnNlKTsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIC8vIOeUn+aIkOaIkOWKn+WQju+8jOeri+WNs+afpeivouaVsOaNruW6k+iOt+WPluacgOaWsOaVsOaNrgogICAgICAgICAgYXdhaXQgdGhpcy5sb2FkTGF0ZXN0UmVjb21tZW5kYXRpb24oKTsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn55Sf5oiQ6JCl5YW75o6o6I2Q5oiQ5YqfJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+eUn+aIkOaOqOiNkOWksei0pTonLCByZXNwb25zZS5kYXRhLm1zZyk7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcocmVzcG9uc2UuZGF0YS5tc2cgfHwgJ+eUn+aIkOiQpeWFu+aOqOiNkOaaguaXtuWksei0pe+8jOivt+eojeWQjuafpeeci+e7k+aenCcpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCfnlJ/miJDokKXlhbvmjqjojZDlpLHotKU6JywgZXJyb3IpOwogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn55Sf5oiQ6JCl5YW75o6o6I2Q5pqC5pe25aSx6LSl77yM6K+356iN5ZCO5p+l55yL57uT5p6cJyk7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICAKCiAgICAKCiAgICAKICAgIC8vIOS9v+eUqOaOqOiNkAogICAgdXNlUmVjb21tZW5kYXRpb24ocmVjb21tZW5kYXRpb24pIHsKICAgICAgdGhpcy5jdXJyZW50UmVjb21tZW5kYXRpb24gPSB7IC4uLnJlY29tbWVuZGF0aW9uIH07CiAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5bey5bqU55So6K+l5o6o6I2QJyk7CiAgICB9LAogICAgCiAgICAvLyDliKDpmaTmjqjojZAKICAgIGFzeW5jIGRlbGV0ZVJlY29tbWVuZGF0aW9uKGlkKSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGhpcy4kY29uZmlybSgn56Gu5a6a6KaB5Yig6Zmk6L+Z5p2h5o6o6I2Q6K6w5b2V5ZCX77yfJywgJ+aPkOekuicsIHsKICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgfSk7CiAgICAgICAgCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkZWxldGVOdXRyaXRpb25SZWNvbW1lbmRhdGlvbnMoW2lkXSk7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOaIkOWKnycpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3BvbnNlLmRhdGEubXNnIHx8ICfliKDpmaTlpLHotKUnKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yICE9PSAnY2FuY2VsJykgewogICAgICAgICAgY29uc29sZS5lcnJvcign5Yig6Zmk5o6o6I2Q5aSx6LSlOicsIGVycm9yKTsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WIoOmZpOWksei0pScpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIAoKICAgIAogICAgLy8g5qC85byP5YyW5pel5pyfCiAgICBmb3JtYXREYXRlKGRhdGUpIHsKICAgICAgaWYgKCFkYXRlKSByZXR1cm4gJyc7CiAgICAgIHJldHVybiBuZXcgRGF0ZShkYXRlKS50b0xvY2FsZURhdGVTdHJpbmcoKTsKICAgIH0sCiAgICAKICAgIC8vIOagvOW8j+WMluaVsOWtlwogICAgZm9ybWF0TnVtYmVyKHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gJzAnOwogICAgICAvLyDlpITnkIblrZfnrKbkuLLmiJbmlbDlrZcKICAgICAgY29uc3QgbnVtID0gcGFyc2VGbG9hdCh2YWx1ZSk7CiAgICAgIHJldHVybiBpc05hTihudW0pID8gJzAnIDogbnVtLnRvRml4ZWQoMSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["NutritionRecommendation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NutritionRecommendation.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div class=\"nutrition-recommendation\">\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>营养推荐</span>\n        <el-button \n          style=\"float: right; padding: 3px 0\" \n          type=\"text\"\n          :loading=\"loading\"\n          @click=\"generateRecommendation\">\n          生成推荐\n        </el-button>\n      </div>\n      \n      <!-- 当前推荐 -->\n      <div v-if=\"currentRecommendation\">\n        <h3>当前营养推荐</h3>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"6\">\n            <div class=\"nutrition-item\">\n              <div class=\"nutrition-label\">卡路里</div>\n              <div class=\"nutrition-value\">{{ currentRecommendation.calories || 0 }} kcal</div>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"nutrition-item\">\n              <div class=\"nutrition-label\">蛋白质</div>\n              <div class=\"nutrition-value\">{{ formatNumber(currentRecommendation.protein) }} g</div>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"nutrition-item\">\n              <div class=\"nutrition-label\">碳水化合物</div>\n              <div class=\"nutrition-value\">{{ formatNumber(currentRecommendation.carbohydrate) }} g</div>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"nutrition-item\">\n              <div class=\"nutrition-label\">脂肪</div>\n              <div class=\"nutrition-value\">{{ formatNumber(currentRecommendation.fat) }} g</div>\n            </div>\n          </el-col>\n        </el-row>\n        \n        <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n          <el-col :span=\"6\">\n            <div class=\"nutrition-item\">\n              <div class=\"nutrition-label\">膳食纤维</div>\n              <div class=\"nutrition-value\">{{ formatNumber(currentRecommendation.fiber) }} g</div>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"nutrition-item\">\n              <div class=\"nutrition-label\">钠</div>\n              <div class=\"nutrition-value\">{{ formatNumber(currentRecommendation.sodium) }} mg</div>\n            </div>\n          </el-col>\n        </el-row>\n        \n        <div v-if=\"currentRecommendation.notes\" style=\"margin-top: 20px;\">\n          <h4>推荐说明</h4>\n          <p>{{ currentRecommendation.notes }}</p>\n        </div>\n        \n\n      </div>\n      \n      <!-- 无推荐时的提示 -->\n      <div v-else>\n        <el-empty description=\"暂无营养推荐\">\n        </el-empty>\n      </div>\n    </el-card>\n    \n\n\n  </div>\n</template>\n\n<script>\nimport { \n  generateNutritionRecommendation, \n  deleteNutritionRecommendations,\n  getLatestNutritionRecommendation\n} from '@/api/nutrition';\n\nexport default {\n  name: 'NutritionRecommendation',\n  data() {\n    return {\n      currentRecommendation: null,\n      loading: false\n    };\n  },\n  mounted() {\n    this.loadLatestRecommendation();\n  },\n  methods: {\n    // 加载最新的推荐\n    async loadLatestRecommendation() {\n      try {\n        const response = await getLatestNutritionRecommendation();\n        console.log('获取最新推荐响应:', response);\n        if (response.data.code === 200 && response.data.data) {\n          console.log('最新推荐数据:', response.data.data);\n          this.currentRecommendation = response.data.data;\n        } else {\n          console.log('没有找到推荐数据:', response.data.msg);\n        }\n      } catch (error) {\n        console.error('加载最新推荐失败:', error);\n      }\n    },\n    \n    // 生成新的营养推荐\n    async generateRecommendation() {\n      this.loading = true;\n      // 先显示一个提示，告知用户生成推荐可能需要较长时间\n      this.$message.info('正在生成营养推荐，这可能需要一些时间，请耐心等待...');\n      try {\n        const response = await generateNutritionRecommendation();\n        console.log('生成推荐响应:', response);\n        if (response.data.code === 200) {\n          // 生成成功后，立即查询数据库获取最新数据\n          await this.loadLatestRecommendation();\n          this.$message.success('生成营养推荐成功');\n        } else {\n          console.error('生成推荐失败:', response.data.msg);\n          this.$message.warning(response.data.msg || '生成营养推荐暂时失败，请稍后查看结果');\n        }\n      } catch (error) {\n        console.error('生成营养推荐失败:', error);\n        this.$message.warning('生成营养推荐暂时失败，请稍后查看结果');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n\n    \n\n    \n    // 使用推荐\n    useRecommendation(recommendation) {\n      this.currentRecommendation = { ...recommendation };\n      this.$message.success('已应用该推荐');\n    },\n    \n    // 删除推荐\n    async deleteRecommendation(id) {\n      try {\n        await this.$confirm('确定要删除这条推荐记录吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        \n        const response = await deleteNutritionRecommendations([id]);\n        if (response.data.code === 200) {\n          this.$message.success('删除成功');\n        } else {\n          this.$message.error(response.data.msg || '删除失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除推荐失败:', error);\n          this.$message.error('删除失败');\n        }\n      }\n    },\n    \n\n    \n    // 格式化日期\n    formatDate(date) {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString();\n    },\n    \n    // 格式化数字\n    formatNumber(value) {\n      if (value === null || value === undefined) return '0';\n      // 处理字符串或数字\n      const num = parseFloat(value);\n      return isNaN(num) ? '0' : num.toFixed(1);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.nutrition-recommendation {\n  padding: 20px;\n}\n\n.nutrition-item {\n  text-align: center;\n  padding: 20px;\n  border: 1px solid #e4e7ed;\n  border-radius: 4px;\n  background-color: #f9f9f9;\n}\n\n.nutrition-label {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 8px;\n}\n\n.nutrition-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #409eff;\n}\n\n.no-recommendation {\n  text-align: center;\n  padding: 40px;\n}\n\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n\n.clearfix:after {\n  clear: both;\n}\n</style>"]}]}