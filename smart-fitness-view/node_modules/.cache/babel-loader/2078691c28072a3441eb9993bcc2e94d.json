{"remainingRequest":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\babel-loader\\lib\\index.js!E:\\SmartFitness\\smart-fitness-view\\src\\api\\cozeWorkflow.js","dependencies":[{"path":"E:\\SmartFitness\\smart-fitness-view\\src\\api\\cozeWorkflow.js","mtime":1749641968347},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749639512193},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1749639511518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/SmartFitness/smart-fitness-view/src/api/cozeWorkflow.js"],"names":["axios","getStoredToken","localStorage","getItem","updateCozeToken","token","setItem","error","console","createCozeClient","Error","create","baseURL","headers","sendMessageToWorkflow","workflowId","message","client","response","post","model","messages","role","content","temperature","max_tokens","stream","workflow_id","data","status","timeout","isTokenValid","instance","callCozeWorkflow","parameters","personalAccessToken","defaults","Authorization","streamCozeWorkflow","onMessage","accessToken","url","fetch","method","body","JSON","stringify","reader","getReader","decoder","TextDecoder","result","done","value","read","chunk","decode","parse","callCozeWorkflowWithSDK","log","ok","statusText","success","errorMessage","enhancedError","originalError","isTokenError","includes"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\n// 获取存储的token\r\nconst getStoredToken = () => {\r\n    return localStorage.getItem('cozeToken') || 'pat_ZR3dhICDUSMapWasnt1NKW29LcoyvZlRVdKZetwZ5moYxCdzZq8Ju8MUGZmQoF2A';\r\n};\r\n\r\n// 更新token\r\nexport const updateCozeToken = (token) => {\r\n    try {\r\n        localStorage.setItem('cozeToken', token);\r\n        return true;\r\n    } catch (error) {\r\n        console.error('更新token失败:', error);\r\n        return false;\r\n    }\r\n};\r\n\r\n// 创建Coze API客户端\r\nexport const createCozeClient = () => {\r\n    const token = getStoredToken();\r\n    if (!token) {\r\n        throw new Error('未设置Coze Token');\r\n    }\r\n\r\n    return axios.create({\r\n        baseURL: 'https://api.coze.cn',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n    });\r\n};\r\n\r\n// 发送消息到Coze工作流\r\nexport const sendMessageToWorkflow = async (workflowId, message) => {\r\n    try {\r\n        const client = createCozeClient();\r\n        const response = await client.post('/api/chat/completions', {\r\n            model: 'gpt-3.5-turbo',\r\n            messages: [{\r\n                role: 'user',\r\n                content: message\r\n            }],\r\n            temperature: 0.7,\r\n            max_tokens: 1000,\r\n            stream: false,\r\n            workflow_id: workflowId\r\n        });\r\n\r\n        if (!response.data) {\r\n            throw new Error('API响应格式错误');\r\n        }\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('发送消息失败:', error);\r\n        if (error.response) {\r\n            // 处理API错误响应\r\n            if (error.response.status === 401 || error.response.status === 403) {\r\n                throw new Error('Token无效或已过期，请重新设置Token');\r\n            }\r\n            throw new Error(error.response.data?.error?.message || 'API调用失败');\r\n        }\r\n        throw error;\r\n    }\r\n};\r\n\r\n// 基础配置\r\nconst baseURL = 'https://api.coze.cn';\r\nconst timeout = 30000;\r\n// 注意：此token可能已过期，请替换为有效的token\r\n// 从localStorage中获取token，如果没有则使用默认值\r\nconst token = localStorage.getItem('cozeToken') || 'pat_ZR3dhICDUSMapWasnt1NKW29LcoyvZlRVdKZetwZ5moYxCdzZq8Ju8MUGZmQoF2A';\r\n\r\n// 检查token是否有效的标志\r\nlet isTokenValid = true;\r\n\r\n// 创建axios实例\r\nconst instance = axios.create({\r\n  baseURL,\r\n  timeout,\r\n  headers: {\r\n    'Authorization': `Bearer ${token}`,\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n/**\r\n * 调用扣子AI工作流\r\n * @param {string} workflowId - 工作流ID\r\n * @param {object} parameters - 工作流参数\r\n * @param {string} [personalAccessToken] - 个人访问令牌，可选\r\n * @returns {Promise} - 返回工作流执行结果\r\n */\r\nexport const callCozeWorkflow = async (workflowId, parameters, personalAccessToken) => {\r\n  try {\r\n    // 如果提供了个人访问令牌，则使用它\r\n    if (personalAccessToken) {\r\n      instance.defaults.headers.Authorization = `Bearer ${personalAccessToken}`;\r\n    }\r\n\r\n    const response = await instance.post(`/workflows/${workflowId}/runs`, {\r\n      parameters\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('调用扣子AI工作流失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 流式调用扣子AI工作流\r\n * @param {string} workflowId - 工作流ID\r\n * @param {object} parameters - 工作流参数\r\n * @param {function} onMessage - 处理流式消息的回调函数\r\n * @param {string} [personalAccessToken] - 个人访问令牌，可选\r\n * @returns {Promise} - 返回工作流执行结果\r\n */\r\nexport const streamCozeWorkflow = async (workflowId, parameters, onMessage, personalAccessToken) => {\r\n  try {\r\n    // 如果提供了个人访问令牌，则使用它\r\n    const accessToken = personalAccessToken || token;\r\n    \r\n    // 使用EventSource进行SSE连接\r\n    const url = `${baseURL}/workflows/${workflowId}/runs/stream`;\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ parameters }),\r\n    });\r\n\r\n    // 读取流式响应\r\n    const reader = response.body.getReader();\r\n    const decoder = new TextDecoder();\r\n    let result = '';\r\n\r\n    while (true) {\r\n      const { done, value } = await reader.read();\r\n      if (done) break;\r\n      \r\n      const chunk = decoder.decode(value, { stream: true });\r\n      result += chunk;\r\n      \r\n      // 调用回调函数处理消息\r\n      if (onMessage && typeof onMessage === 'function') {\r\n        onMessage(chunk);\r\n      }\r\n    }\r\n\r\n    return JSON.parse(result);\r\n  } catch (error) {\r\n    console.error('流式调用扣子AI工作流失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 使用增强版axios调用扣子AI工作流（替代SDK方案）\r\n * @param {string} workflowId - 工作流ID\r\n * @param {object} parameters - 工作流参数\r\n * @param {string} [personalAccessToken] - 个人访问令牌，可选\r\n * @param {function} [onMessage] - 处理流式消息的回调函数，可选\r\n * @returns {Promise} - 返回工作流执行结果\r\n */\r\nexport const callCozeWorkflowWithSDK = async (workflowId, parameters, personalAccessToken, onMessage) => {\r\n  try {\r\n    // 如果已知token无效，直接抛出错误\r\n    if (!isTokenValid) {\r\n      throw new Error('API令牌已失效，请更新有效的访问令牌');\r\n    }\r\n    \r\n    // 使用访问令牌\r\n    const accessToken = personalAccessToken || token;\r\n    \r\n    // 如果提供了onMessage回调，使用流式调用\r\n    if (onMessage && typeof onMessage === 'function') {\r\n      // 使用fetch API进行流式调用\r\n      const url = `${baseURL}/workflows/${workflowId}/runs/stream`;\r\n      \r\n      console.log('正在连接扣子AI工作流...', { workflowId });\r\n      \r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ parameters }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // 检查是否是授权问题\r\n        if (response.status === 401 || response.status === 403) {\r\n          isTokenValid = false;\r\n          throw new Error(`授权失败: 访问令牌可能已过期或无效 (状态码: ${response.status})`);\r\n        }\r\n        throw new Error(`HTTP错误! 状态码: ${response.status}, 状态文本: ${response.statusText}`);\r\n      }\r\n\r\n      // 读取流式响应\r\n      const reader = response.body.getReader();\r\n      const decoder = new TextDecoder();\r\n      \r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n        \r\n        const chunk = decoder.decode(value, { stream: true });\r\n        // 模拟SDK的响应格式\r\n        onMessage({ data: chunk });\r\n      }\r\n\r\n      return { success: true, message: '流式调用完成' };\r\n    } else {\r\n      // 否则使用普通调用\r\n      const response = await instance.post(`/workflows/${workflowId}/runs`, {\r\n        parameters\r\n      });\r\n\r\n      return response.data;\r\n    }\r\n  } catch (error) {\r\n    console.error('使用增强版axios调用扣子AI工作流失败:', error);\r\n    \r\n    // 提供更详细的错误信息\r\n    const errorMessage = error.message || '未知错误';\r\n    const enhancedError = new Error(`调用扣子AI工作流失败: ${errorMessage}`);\r\n    enhancedError.originalError = error;\r\n    enhancedError.isTokenError = errorMessage.includes('授权失败') || errorMessage.includes('令牌已失效');\r\n    \r\n    throw enhancedError;\r\n  }\r\n};"]}]}