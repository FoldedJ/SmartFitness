{"remainingRequest":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\babel-loader\\lib\\index.js!E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\SmartFitness\\smart-fitness-view\\src\\components\\CozeAssistant.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\SmartFitness\\smart-fitness-view\\src\\components\\CozeAssistant.vue","mtime":1749652926820},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749639512193},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1749639511518},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749639512193},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1749639525774}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CozeAssistant.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"coze-assistant-container\" :class=\"{ 'coze-assistant-open': isOpen }\">\n    <div class=\"coze-assistant-toggle\" @click=\"toggleAssistant\">\n      <i :class=\"isOpen ? 'el-icon-close' : 'el-icon-s-comment'\"></i>\n    </div>\n    <div class=\"coze-assistant-content\" v-if=\"isOpen\">\n      <div class=\"coze-assistant-header\">\n        <span>智能助手</span>\n      </div>\n      <div class=\"coze-assistant-body\">\n        <div class=\"coze-assistant-messages\" ref=\"messagesContainer\">\n          <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\" :class=\"message.type\">\n            <div class=\"message-content\">{{ message.content }}</div>\n          </div>\n        </div>\n        <div class=\"coze-assistant-input\">\n          <el-input\n            v-model=\"userInput\"\n            placeholder=\"请输入您的问题...\"\n            @keyup.enter.native=\"sendMessage\"\n          ></el-input>\n          <el-button type=\"primary\" icon=\"el-icon-s-promotion\" @click=\"sendMessage\"></el-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 移除静态导入\n// import { CozeAPI } from '@coze/api';\n\nexport default {\n  name: 'CozeAssistant',\n  data() {\n    return {\n      isOpen: false,\n      userInput: '',\n      messages: [\n        { type: 'assistant', content: '您好，我是您的智能健康助手，有什么可以帮您的吗？' }\n      ],\n      apiClient: null,\n      isLoading: false\n    };\n  },\n  async created() {\n    try {\n      console.log('初始化CozeAPI客户端...');\n      \n      // 动态导入 CozeAPI\n      const { CozeAPI } = await import('@coze/api/dist/esm/index.js');\n      \n      // 初始化 API 客户端\n      this.apiClient = new CozeAPI({\n        token: 'pat_ZR3dhICDUSMapWasnt1NKW29LcoyvZlRVdKZetwZ5moYxCdzZq8Ju8MUGZmQoF2A',\n        baseURL: 'https://api.coze.cn',\n        allowPersonalAccessTokenInBrowser: true\n      });\n      \n      console.log('apiClient初始化结果:', this.apiClient);\n      \n      // 验证 apiClient 是否正确初始化\n      if (!this.apiClient) {\n        throw new Error('Coze API客户端初始化失败，apiClient为null');\n      }\n      \n      console.log('Coze API客户端初始化成功', this.apiClient);\n    } catch (error) {\n      console.error('Coze API客户端初始化失败:', error);\n      this.messages.push({ \n        type: 'assistant', \n        content: `智能助手初始化失败，请刷新页面重试。错误详情: ${error.message || '未知错误'}`\n      });\n    }\n  },\n  methods: {\n    toggleAssistant() {\n      this.isOpen = !this.isOpen;\n    },\n    async sendMessage() {\n      if (!this.userInput.trim() || this.isLoading) return;\n      \n      // 检查apiClient是否正确初始化\n      if (!this.apiClient) {\n        const errorMsg = '智能助手未正确初始化，请刷新页面重试';\n        console.error('智能助手未正确初始化，apiClient不存在');\n        this.messages.push({ \n          type: 'assistant', \n          content: errorMsg \n        });\n        return;\n      }\n      \n      // 添加用户消息\n      this.messages.push({ type: 'user', content: this.userInput });\n      const userQuestion = this.userInput;\n      this.userInput = '';\n      this.isLoading = true;\n      \n      // 添加临时加载消息\n      const loadingMsgIndex = this.messages.length;\n      this.messages.push({ type: 'assistant', content: '正在思考...' });\n      \n      try {\n        console.log('发送问题:', userQuestion);\n        \n        // 使用 chat 接口，添加 bot_id\n        const res = await this.apiClient.chat.create({\n          bot_id: '7514613032933277731',\n          messages: [{\n            role: 'user',\n            content: userQuestion\n          }]\n        });\n        \n        console.log('API完整响应:', JSON.stringify(res, null, 2));\n        \n        // 检查响应格式\n        if (!res) {\n          throw new Error('API响应为空');\n        }\n        \n        // 处理进行中的状态，需要轮询获取结果\n        if (res.status === 'in_progress' && res.id) {\n          console.log('对话正在进行中，开始轮询获取结果...');\n          let runId = res.id;\n          let maxRetries = 10;\n          let retryCount = 0;\n          let output = '';\n          \n          // 轮询获取结果\n          while (retryCount < maxRetries) {\n            await new Promise(resolve => setTimeout(resolve, 1000)); // 等待1秒\n            retryCount++;\n            \n            try {\n              console.log(`第${retryCount}次轮询获取结果...`);\n              const pollRes = await this.apiClient.chat.retrieve({\n                id: runId\n              });\n              \n              console.log('轮询响应:', JSON.stringify(pollRes, null, 2));\n              \n              // 检查是否完成\n              if (pollRes.status === 'completed' && pollRes.choices && pollRes.choices.length > 0) {\n                output = pollRes.choices[0].message.content;\n                console.log('获取到最终结果:', output);\n                break;\n              } else if (pollRes.status === 'failed') {\n                const errorMsg = pollRes.last_error && pollRes.last_error.msg ? pollRes.last_error.msg : '未知错误';\n                throw new Error('对话处理失败: ' + errorMsg);\n              }\n              \n              // 继续等待\n              console.log(`对话仍在处理中，继续等待... (${retryCount}/${maxRetries})`);\n            } catch (pollError) {\n              console.error('轮询过程中出错:', pollError);\n              throw pollError;\n            }\n          }\n          \n          if (!output) {\n            throw new Error('获取对话结果超时，请稍后再试');\n          }\n          \n          return this.$set(this.messages, loadingMsgIndex, { \n            type: 'assistant', \n            content: output\n          });\n        }\n        \n        // 尝试不同的响应格式\n        let output = '';\n        if (res.choices && res.choices.length > 0 && res.choices[0].message) {\n          output = res.choices[0].message.content;\n        } else if (res.data && res.data.output) {\n          output = res.data.output;\n        } else if (res.output) {\n          output = res.output;\n        } else if (typeof res === 'string') {\n          output = res;\n        } else {\n          console.error('无法识别的响应格式:', res);\n          throw new Error('无法识别的响应格式，请检查API文档');\n        }\n        \n        console.log('处理后的响应:', output);\n        \n        this.$set(this.messages, loadingMsgIndex, { \n          type: 'assistant', \n          content: output\n        });\n      } catch (error) {\n        console.error('Coze API调用失败:', error);\n        let errorMessage = '抱歉，服务暂时不可用，请稍后再试。';\n        \n        if (error && error.code === 4015) {\n          errorMessage = '抱歉，智能助手尚未完成配置，请稍后再试。';\n          console.error('机器人未发布到API渠道，请先在Coze平台发布机器人');\n        } else if (error && error.message) {\n          console.log('错误详情:', error.message);\n          errorMessage = `抱歉，发生了错误: ${error.message}`;\n        }\n        \n        this.$set(this.messages, loadingMsgIndex, { \n          type: 'assistant', \n          content: errorMessage\n        });\n      } finally {\n        this.isLoading = false;\n        this.$nextTick(() => {\n          if (this.$refs.messagesContainer) {\n            this.$refs.messagesContainer.scrollTop = this.$refs.messagesContainer.scrollHeight;\n          }\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.coze-assistant-container {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 1000;\n}\n\n.coze-assistant-toggle {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background-color: #15559a;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.coze-assistant-toggle i {\n  font-size: 24px;\n}\n\n.coze-assistant-content {\n  position: absolute;\n  bottom: 60px;\n  right: 0;\n  width: 350px;\n  height: 450px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.coze-assistant-header {\n  padding: 10px 15px;\n  background-color: #15559a;\n  color: white;\n  font-weight: bold;\n}\n\n.coze-assistant-body {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  overflow: hidden;\n}\n\n.coze-assistant-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 10px;\n}\n\n.message {\n  margin-bottom: 10px;\n  max-width: 80%;\n}\n\n.message.user {\n  margin-left: auto;\n}\n\n.message.assistant {\n  margin-right: auto;\n}\n\n.message-content {\n  padding: 8px 12px;\n  border-radius: 18px;\n  display: inline-block;\n  word-break: break-word;\n}\n\n.user .message-content {\n  background-color: #15559a;\n  color: white;\n}\n\n.assistant .message-content {\n  background-color: #f2f2f2;\n  color: #333;\n}\n\n.coze-assistant-input {\n  display: flex;\n  margin-top: 10px;\n}\n\n.coze-assistant-input .el-input {\n  flex: 1;\n  margin-right: 10px;\n}\n</style>"],"sourceRoot":"src/components"}]}