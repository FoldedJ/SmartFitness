{"remainingRequest":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\babel-loader\\lib\\index.js!E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\SmartFitness\\smart-fitness-view\\src\\components\\ChatBot.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\SmartFitness\\smart-fitness-view\\src\\components\\ChatBot.vue","mtime":1749640230233},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749639512193},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1749639511518},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749639512193},{"path":"E:\\SmartFitness\\smart-fitness-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1749639525774}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDaGF0Qm90JywKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzTWluaW1pemVkOiBmYWxzZSwKICAgICAgdXNlcklucHV0OiAnJywKICAgICAgbWVzc2FnZXM6IFtdLAogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBhcGlDb25maWc6IHsKICAgICAgICB0b2tlbjogJ3BhdF9aUjNkaElDRFVTTWFwV2FzbnQxTktXMjlMY295dlpsUlZkS1pldHdaNW1vWXhDZHpacThKdThNVUdabVFvRjJBJywKICAgICAgICBiYXNlVVJMOiAnaHR0cHM6Ly9hcGkuY296ZS5jbicsCiAgICAgICAgbW9kZWw6ICdncHQtMy41LXR1cmJvJwogICAgICB9CiAgICB9OwogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICAvLyDmt7vliqDmrKLov47mtojmga8KICAgIHRoaXMubWVzc2FnZXMucHVzaCh7CiAgICAgIHR5cGU6ICdib3QnLAogICAgICBjb250ZW50OiAn5oKo5aW977yB5oiR5piv5oKo55qE5pm66IO95YGl6Lqr5Yqp5omL77yM6K+36Zeu5pyJ5LuA5LmI5Y+v5Lul5biu5oKo77yfJwogICAgfSk7CiAgfSwKCiAgbWV0aG9kczogewogICAgdG9nZ2xlTWluaW1pemUoKSB7CiAgICAgIHRoaXMuaXNNaW5pbWl6ZWQgPSAhdGhpcy5pc01pbmltaXplZDsKICAgIH0sCgogICAgYXN5bmMgc2VuZE1lc3NhZ2UoKSB7CiAgICAgIGlmICghdGhpcy51c2VySW5wdXQudHJpbSgpIHx8IHRoaXMuaXNMb2FkaW5nKSByZXR1cm47IC8vIOa3u+WKoOeUqOaIt+a2iOaBrwoKICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKHsKICAgICAgICB0eXBlOiAndXNlcicsCiAgICAgICAgY29udGVudDogdGhpcy51c2VySW5wdXQKICAgICAgfSk7CiAgICAgIGNvbnN0IHVzZXJNZXNzYWdlID0gdGhpcy51c2VySW5wdXQ7CiAgICAgIHRoaXMudXNlcklucHV0ID0gJyc7CiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsKCiAgICAgIHRyeSB7CiAgICAgICAgLy8g6LCD55SoQ296ZSBBUEkKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoYCR7dGhpcy5hcGlDb25maWcuYmFzZVVSTH0vYXBpL2NoYXQvY29tcGxldGlvbnNgLCB7CiAgICAgICAgICBtb2RlbDogdGhpcy5hcGlDb25maWcubW9kZWwsCiAgICAgICAgICBtZXNzYWdlczogW3sKICAgICAgICAgICAgcm9sZTogJ3VzZXInLAogICAgICAgICAgICBjb250ZW50OiB1c2VyTWVzc2FnZQogICAgICAgICAgfV0sCiAgICAgICAgICB0ZW1wZXJhdHVyZTogMC43LAogICAgICAgICAgbWF4X3Rva2VuczogMTAwMAogICAgICAgIH0sIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7dGhpcy5hcGlDb25maWcudG9rZW59YCwKICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgfQogICAgICAgIH0pOyAvLyDmt7vliqDmnLrlmajkurrlm57lpI0KCiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgJiYgcmVzcG9uc2UuZGF0YS5jaG9pY2VzICYmIHJlc3BvbnNlLmRhdGEuY2hvaWNlc1swXSkgewogICAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKHsKICAgICAgICAgICAgdHlwZTogJ2JvdCcsCiAgICAgICAgICAgIGNvbnRlbnQ6IHJlc3BvbnNlLmRhdGEuY2hvaWNlc1swXS5tZXNzYWdlLmNvbnRlbnQKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcmVzcG9uc2UgZm9ybWF0Jyk7CiAgICAgICAgfSAvLyDmu5rliqjliLDlupXpg6gKCgogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMuJHJlZnMubWVzc2FnZUNvbnRhaW5lcjsKICAgICAgICAgIGNvbnRhaW5lci5zY3JvbGxUb3AgPSBjb250YWluZXIuc2Nyb2xsSGVpZ2h0OwogICAgICAgIH0pOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0NoYXQgQVBJIGVycm9yOicsIGVycm9yKTsKICAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goewogICAgICAgICAgdHlwZTogJ2JvdCcsCiAgICAgICAgICBjb250ZW50OiAn5oqx5q2J77yM5oiR6YGH5Yiw5LqG5LiA5Lqb6Zeu6aKY77yM6K+356iN5ZCO5YaN6K+V44CC6ZSZ6K+v5L+h5oGv77yaJyArIChlcnJvci5yZXNwb25zZT8uZGF0YT8uZXJyb3I/Lm1lc3NhZ2UgfHwgZXJyb3IubWVzc2FnZSkKICAgICAgICB9KTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgICB9CiAgICB9CgogIH0KfTs="},{"version":3,"sources":["ChatBot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,sEADA;AAEA,QAAA,OAAA,EAAA,qBAFA;AAGA,QAAA,KAAA,EAAA;AAHA;AALA,KAAA;AAWA,GAdA;;AAeA,EAAA,OAAA,GAAA;AACA;AACA,SAAA,QAAA,CAAA,IAAA,CAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GArBA;;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,GAAA;AACA,WAAA,WAAA,GAAA,CAAA,KAAA,WAAA;AACA,KAHA;;AAIA,UAAA,WAAA,GAAA;AACA,UAAA,CAAA,KAAA,SAAA,CAAA,IAAA,EAAA,IAAA,KAAA,SAAA,EAAA,OADA,CAGA;;AACA,WAAA,QAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,KAAA;AAFA,OAAA;AAKA,YAAA,WAAA,GAAA,KAAA,SAAA;AACA,WAAA,SAAA,GAAA,EAAA;AACA,WAAA,SAAA,GAAA,IAAA;;AAEA,UAAA;AACA;AACA,cAAA,QAAA,GAAA,MAAA,KAAA,CAAA,IAAA,CACA,GAAA,KAAA,SAAA,CAAA,OAAA,uBADA,EAEA;AACA,UAAA,KAAA,EAAA,KAAA,SAAA,CAAA,KADA;AAEA,UAAA,QAAA,EAAA,CAAA;AACA,YAAA,IAAA,EAAA,MADA;AAEA,YAAA,OAAA,EAAA;AAFA,WAAA,CAFA;AAMA,UAAA,WAAA,EAAA,GANA;AAOA,UAAA,UAAA,EAAA;AAPA,SAFA,EAWA;AACA,UAAA,OAAA,EAAA;AACA,6BAAA,UAAA,KAAA,SAAA,CAAA,KAAA,EADA;AAEA,4BAAA,kBAFA;AAGA,sBAAA;AAHA;AADA,SAXA,CAAA,CAFA,CAsBA;;AACA,YAAA,QAAA,CAAA,IAAA,IAAA,QAAA,CAAA,IAAA,CAAA,OAAA,IAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA;AACA,eAAA,QAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA,KADA;AAEA,YAAA,OAAA,EAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,EAAA,OAAA,CAAA;AAFA,WAAA;AAIA,SALA,MAKA;AACA,gBAAA,IAAA,KAAA,CAAA,yBAAA,CAAA;AACA,SA9BA,CAgCA;;;AACA,aAAA,SAAA,CAAA,MAAA;AACA,gBAAA,SAAA,GAAA,KAAA,KAAA,CAAA,gBAAA;AACA,UAAA,SAAA,CAAA,SAAA,GAAA,SAAA,CAAA,YAAA;AACA,SAHA;AAIA,OArCA,CAqCA,OAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,iBAAA,EAAA,KAAA;AACA,aAAA,QAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,OAAA,EAAA,6BAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,IAAA,KAAA,CAAA,OAAA;AAFA,SAAA;AAIA,OA3CA,SA2CA;AACA,aAAA,SAAA,GAAA,KAAA;AACA;AACA;;AA/DA;AAtBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"chat-bot-container\" :class=\"{ 'chat-bot-minimized': isMinimized }\">\r\n    <!-- 悬浮窗头部 -->\r\n    <div class=\"chat-bot-header\" @click=\"toggleMinimize\">\r\n      <span class=\"chat-bot-title\">智能助手</span>\r\n      <div class=\"chat-bot-controls\">\r\n        <i :class=\"isMinimized ? 'el-icon-plus' : 'el-icon-minus'\" class=\"control-icon\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 聊天内容区域 -->\r\n    <div class=\"chat-bot-content\" v-show=\"!isMinimized\">\r\n      <div class=\"chat-messages\" ref=\"messageContainer\">\r\n        <div v-for=\"(message, index) in messages\" :key=\"index\" \r\n             :class=\"['message', message.type === 'user' ? 'user-message' : 'bot-message']\">\r\n          <div class=\"message-content\">{{ message.content }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 输入区域 -->\r\n      <div class=\"chat-input-area\">\r\n        <el-input\r\n          v-model=\"userInput\"\r\n          type=\"textarea\"\r\n          :rows=\"2\"\r\n          placeholder=\"请输入您的问题...\"\r\n          @keyup.enter.native=\"sendMessage\"\r\n        ></el-input>\r\n        <el-button type=\"primary\" @click=\"sendMessage\" :disabled=\"!userInput.trim() || isLoading\">\r\n          {{ isLoading ? '发送中...' : '发送' }}\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ChatBot',\r\n  data() {\r\n    return {\r\n      isMinimized: false,\r\n      userInput: '',\r\n      messages: [],\r\n      isLoading: false,\r\n      apiConfig: {\r\n        token: 'pat_ZR3dhICDUSMapWasnt1NKW29LcoyvZlRVdKZetwZ5moYxCdzZq8Ju8MUGZmQoF2A',\r\n        baseURL: 'https://api.coze.cn',\r\n        model: 'gpt-3.5-turbo'\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    // 添加欢迎消息\r\n    this.messages.push({\r\n      type: 'bot',\r\n      content: '您好！我是您的智能健身助手，请问有什么可以帮您？'\r\n    });\r\n  },\r\n  methods: {\r\n    toggleMinimize() {\r\n      this.isMinimized = !this.isMinimized;\r\n    },\r\n    async sendMessage() {\r\n      if (!this.userInput.trim() || this.isLoading) return;\r\n\r\n      // 添加用户消息\r\n      this.messages.push({\r\n        type: 'user',\r\n        content: this.userInput\r\n      });\r\n\r\n      const userMessage = this.userInput;\r\n      this.userInput = '';\r\n      this.isLoading = true;\r\n\r\n      try {\r\n        // 调用Coze API\r\n        const response = await axios.post(\r\n          `${this.apiConfig.baseURL}/api/chat/completions`,\r\n          {\r\n            model: this.apiConfig.model,\r\n            messages: [{\r\n              role: 'user',\r\n              content: userMessage\r\n            }],\r\n            temperature: 0.7,\r\n            max_tokens: 1000\r\n          },\r\n          {\r\n            headers: {\r\n              'Authorization': `Bearer ${this.apiConfig.token}`,\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          }\r\n        );\r\n\r\n        // 添加机器人回复\r\n        if (response.data && response.data.choices && response.data.choices[0]) {\r\n          this.messages.push({\r\n            type: 'bot',\r\n            content: response.data.choices[0].message.content\r\n          });\r\n        } else {\r\n          throw new Error('Invalid response format');\r\n        }\r\n\r\n        // 滚动到底部\r\n        this.$nextTick(() => {\r\n          const container = this.$refs.messageContainer;\r\n          container.scrollTop = container.scrollHeight;\r\n        });\r\n      } catch (error) {\r\n        console.error('Chat API error:', error);\r\n        this.messages.push({\r\n          type: 'bot',\r\n          content: '抱歉，我遇到了一些问题，请稍后再试。错误信息：' + (error.response?.data?.error?.message || error.message)\r\n        });\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-bot-container {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  width: 350px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.chat-bot-minimized {\r\n  width: 200px;\r\n}\r\n\r\n.chat-bot-header {\r\n  padding: 12px 16px;\r\n  background: #409EFF;\r\n  color: white;\r\n  border-radius: 8px 8px 0 0;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.chat-bot-title {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n}\r\n\r\n.control-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.chat-bot-content {\r\n  height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-messages {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 16px;\r\n}\r\n\r\n.message {\r\n  margin-bottom: 12px;\r\n  max-width: 80%;\r\n}\r\n\r\n.user-message {\r\n  margin-left: auto;\r\n}\r\n\r\n.bot-message {\r\n  margin-right: auto;\r\n}\r\n\r\n.message-content {\r\n  padding: 8px 12px;\r\n  border-radius: 8px;\r\n  background: #f4f4f5;\r\n  word-break: break-word;\r\n}\r\n\r\n.user-message .message-content {\r\n  background: #409EFF;\r\n  color: white;\r\n}\r\n\r\n.chat-input-area {\r\n  padding: 12px;\r\n  border-top: 1px solid #ebeef5;\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.chat-input-area .el-button {\r\n  align-self: flex-end;\r\n}\r\n</style> "],"sourceRoot":"src/components"}]}