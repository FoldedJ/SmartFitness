<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kmbeast.mapper.EvaluationsMapper">

    <!-- resultMap 用于定义结果集映射 -->
    <resultMap id="commentParentResultMap" type="cn.kmbeast.pojo.vo.CommentParentVO">
        <id property="id" column="ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="userName" column="USER_NAME"/>
        <result property="userAvatar" column="USER_AVATAR"/>
        <result property="content" column="CONTENT"/>
        <result property="upvoteList" column="UPVOTE_LIST"/>
        <result property="childTotal" column="CHILD_TOTAL"/>
        <result property="createTime"
                column="CREATE_TIME"
                javaType="java.time.LocalDateTime"
                jdbcType="TIMESTAMP"/>
        <!-- 使用 collection 标签来映射一对多关系 -->
        <collection property="commentChildVOS"
                    ofType="cn.kmbeast.pojo.vo.CommentChildVO"
                    column="ID"
                    foreignColumn="ID"
                    select="getChildCommentsByParentId"/>
    </resultMap>

    <update id="update">
        UPDATE SYSDBA.EVALUATIONS e
        SET e.UPVOTE_LIST = #{upvoteList}
        WHERE e.ID = #{id}
    </update>

    <!-- 查询父级评论 -->
    <select id="getParentComments" resultMap="commentParentResultMap">
        SELECT e.ID AS ID,
               e.CONTENT AS CONTENT,
               e.UPVOTE_LIST AS UPVOTE_LIST,
               e.CREATE_TIME AS CREATE_TIME,
               u.ID AS USER_ID,
               u.USER_NAME,
               u.USER_AVATAR,
               (SELECT COUNT(*) FROM SYSDBA.EVALUATIONS ev WHERE ev.PARENT_ID = e.ID) AS CHILD_TOTAL
        FROM SYSDBA.EVALUATIONS e
                 LEFT JOIN SYSDBA."USER" u ON u.ID = e.COMMENTER_ID
        WHERE e.CONTENT_ID = #{contentId}
          AND e.CONTENT_TYPE = #{contentType}
          AND e.PARENT_ID IS NULL
        ORDER BY ID DESC
    </select>

    <!-- 根据父级评论ID查询子级评论 -->
    <select id="getChildCommentsByParentId"
            resultType="cn.kmbeast.pojo.vo.CommentChildVO"
            parameterType="Integer">
        SELECT e.ID AS ID,
               e.CONTENT AS CONTENT,
               e.CREATE_TIME AS CREATE_TIME,
               e.PARENT_ID AS PARENT_ID,
               e.UPVOTE_LIST AS UPVOTE_LIST,
               u.ID AS USER_ID,
               u.USER_NAME AS USER_NAME,
               u.USER_AVATAR AS USER_AVATAR,
               u1.ID AS REPLIER_ID,
               u1.USER_NAME AS REPLIER_NAME,
               u1.USER_AVATAR AS REPLIER_AVATAR
        FROM SYSDBA.EVALUATIONS e
                 LEFT JOIN SYSDBA."USER" u ON u.ID = e.COMMENTER_ID
                 LEFT JOIN SYSDBA."USER" u1 ON u1.ID = e.REPLIER_ID
        WHERE e.PARENT_ID = #{id}
          AND e.PARENT_ID IS NOT NULL
        ORDER BY ID DESC
    </select>

    <select id="query" resultType="cn.kmbeast.pojo.vo.CommentChildVO">
        SELECT e.ID AS ID,
               e.CONTENT AS CONTENT,
               e.CREATE_TIME AS CREATE_TIME,
               e.PARENT_ID AS PARENT_ID,
               e.UPVOTE_LIST AS UPVOTE_LIST,
               e.CONTENT_TYPE AS CONTENT_TYPE,
               u.ID AS USER_ID,
               u.USER_NAME AS USER_NAME,
               u.USER_AVATAR AS USER_AVATAR,
               u1.ID AS REPLIER_ID,
               u1.USER_NAME AS REPLIER_NAME,
               u1.USER_AVATAR AS REPLIER_AVATAR
        FROM SYSDBA.EVALUATIONS e
        LEFT JOIN SYSDBA."USER" u ON u.ID = e.COMMENTER_ID
        LEFT JOIN SYSDBA."USER" u1 ON u1.ID = e.REPLIER_ID
        <where>
            <if test="contentType != null and contentType != ''">
                AND e.CONTENT_TYPE = #{contentType}
            </if>
            <if test="content != null and content != ''">
                AND e.CONTENT LIKE '%' || #{content} || '%'
            </if>
            <if test="startTime != null and endTime != null">
                AND e.CREATE_TIME BETWEEN #{startTime} AND #{endTime}
            </if>
        </where>
        ORDER BY e.CREATE_TIME DESC
        <if test="current != null and size != ''">
            OFFSET #{current} ROWS FETCH NEXT #{size} ROWS ONLY
        </if>
    </select>

    <select id="queryCount" resultType="integer">
        SELECT COUNT(*)
        FROM SYSDBA.EVALUATIONS e
        <where>
            <if test="contentType != null and contentType != ''">
                AND e.CONTENT_TYPE LIKE '%' || #{contentType} || '%'
            </if>
            <if test="content != null and content != ''">
                AND e.CONTENT LIKE '%' || #{content} || '%'
            </if>
            <if test="startTime != null and endTime != null">
                AND e.CREATE_TIME BETWEEN #{startTime} AND #{endTime}
            </if>
        </where>
    </select>

    <!--    批量删除笔记信息-->
    <delete id="batchDelete" parameterType="list">
        DELETE FROM SYSDBA.EVALUATIONS WHERE ID IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--评论信息新增-->
    <insert id="save">
        INSERT INTO SYSDBA.EVALUATIONS(PARENT_ID, COMMENTER_ID, REPLIER_ID, CONTENT_TYPE, CONTENT_ID, CONTENT,
                                UPVOTE_LIST, CREATE_TIME)
        VALUES (#{parentId}, #{commenterId}, #{replierId}, #{contentType}, #{contentId}, #{content},
                #{upvoteList}, #{createTime})
    </insert>

    <!--    批量查询二级评论信息-->
    <select id="selectChildComments" parameterType="list" resultType="Integer">
        SELECT e.ID FROM SYSDBA.EVALUATIONS e WHERE e.PARENT_ID IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!--查询指定内容的全部评论数目-->
    <select id="totalCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM SYSDBA.EVALUATIONS e
        WHERE e.CONTENT_ID = #{contentId}
          AND e.CONTENT_TYPE = #{contentType}
    </select>

</mapper>
