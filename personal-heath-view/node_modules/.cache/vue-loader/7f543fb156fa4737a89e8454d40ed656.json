{"remainingRequest":"F:\\SmartFitness\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\SmartFitness\\personal-heath-view\\src\\views\\user\\UserHealthModel.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\SmartFitness\\personal-heath-view\\src\\views\\user\\UserHealthModel.vue","mtime":1734264416000},{"path":"F:\\SmartFitness\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SmartFitness\\personal-heath-view\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SmartFitness\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SmartFitness\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserHealthModel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"UserHealthModel.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n    <div>\r\n        <div style=\"border-radius: 5px;padding: 20px 0 60px 0;width: 100%;background-color: #fafafa;\">\r\n            <div style=\"height: 100px;line-height: 100px;text-align: center;font-size: 24px;\">健康生活，健康人生，从此刻开始！</div>\r\n            <div style=\"height: 50px;line-height: 50px;text-align: center;font-size: 30px;font-weight: bolder;\">\r\n                每一点改变，都值得被记录。\r\n                <span @click=\"toRecord\"\r\n                    style=\"cursor: pointer;;padding: 5px 10px;background-color: #000;border-radius: 5px;color: #fff;\">\r\n                    前去记录\r\n                    <i class=\"el-icon-right\"></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div style=\"padding: 30px 0;\">\r\n            <div style=\"margin: 20px 0;\">\r\n                <!-- 选择具体的指标模型 -->\r\n                <el-select size=\"small\" @change=\"modelChange\" v-model=\"userHealthQueryDto.healthModelConfigId\"\r\n                    placeholder=\"请选择\">\r\n                    <el-option v-for=\"model in usersHealthModelConfig\" :key=\"model.id\" :label=\"model.name\"\r\n                        :value=\"model.id\">\r\n                    </el-option>\r\n                </el-select>\r\n            </div>\r\n            <div>\r\n                <div v-if=\"dates.length === 0\">\r\n                    <el-empty description=\"暂无数据，快去记录吧\"></el-empty>\r\n                </div>\r\n                <div v-else>\r\n                    <LineChart @on-selected=\"onSelectedTime\" height=\"600px\" tag=\"\" :values=\"values\" :date=\"dates\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h2 style=\"padding-left: 20px;border-left: 2px solid rgb(43, 121, 203);\">健康指标数据</h2>\r\n            <el-row style=\"padding: 10px;margin-left: 10px;\">\r\n                <el-row>\r\n                    <el-date-picker @change=\"fetchFreshData\" size=\"small\" style=\"width: 220px;\" v-model=\"searchTime\"\r\n                        type=\"daterange\" range-separator=\"至\" start-placeholder=\"记录开始\" end-placeholder=\"记录结束\">\r\n                    </el-date-picker>\r\n                </el-row>\r\n            </el-row>\r\n            <el-row style=\"margin: 0 20px;border-top: 1px solid rgb(245,245,245);\">\r\n                <el-table row-key=\"id\" @selection-change=\"handleSelectionChange\" :data=\"tableData\">\r\n                    <el-table-column prop=\"name\" width=\"88\" label=\"状态\">\r\n                        <template slot-scope=\"scope\">\r\n                            <i v-if=\"!statusCheck(scope.row)\" style=\"margin-right: 5px;\" class=\"el-icon-warning\"></i>\r\n                            <i v-else style=\"margin-right: 5px;color: rgb(253, 199, 50);\" class=\"el-icon-success\"></i>\r\n                            <el-tooltip v-if=\"!statusCheck(scope.row)\" class=\"item\" effect=\"dark\"\r\n                                content=\"异常指标，提醒用户及时处理\" placement=\"bottom-end\">\r\n                                <span style=\"text-decoration: underline;text-decoration-style: dashed;\">异常</span>\r\n                            </el-tooltip>\r\n                            <span v-else>正常</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"value\" width=\"148\" label=\"记录值\" sortable>\r\n                        <template slot-scope=\"scope\">\r\n                            <span>{{ scope.row.value }}({{ scope.row.unit }})</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"name\" label=\"模型名\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span><i class=\"el-icon-receiving\" style=\"margin-right: 3px;\"></i>{{ scope.row.name\r\n                                }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"unit\" width=\"88\" label=\"单位\"></el-table-column>\r\n                    <el-table-column prop=\"symbol\" width=\"88\" label=\"符号\"></el-table-column>\r\n                    <el-table-column prop=\"valueRange\" width=\"128\" label=\"阈值\"></el-table-column>\r\n                    <el-table-column prop=\"createTime\" width=\"178\" label=\"记录时间\" sortable></el-table-column>\r\n                    <el-table-column label=\"操作\" width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span class=\"text-button\" @click=\"handleDelete(scope.row)\">删除</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <el-pagination style=\"margin: 20px 0;\" @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\" :current-page=\"currentPage\" :page-sizes=\"[10, 20]\"\r\n                    :page-size=\"pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"totalItems\"></el-pagination>\r\n            </el-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport LineChart from '@/components/LineChart.vue';\r\nexport default {\r\n    components: { LineChart },\r\n    data() {\r\n        return {\r\n            usersHealthModelConfig: [],\r\n            modelConfigList: [],\r\n            userHealthQueryDto: {}, // 查询的参数\r\n            values: [],\r\n            dates: [],\r\n            tableData: [],\r\n            selectedRows: [],\r\n            currentPage: 1,\r\n            pageSize: 10,\r\n            totalItems: 0,\r\n            searchTime: [],\r\n            healthModelConfigId: null\r\n        }\r\n    },\r\n    created() {\r\n        this.loadHealthModelConfig();\r\n        this.fetchFreshData();\r\n    },\r\n    methods: {\r\n        handleDelete(row) {\r\n            this.selectedRows.push(row);\r\n            this.batchDelete();\r\n        },\r\n        // 处理用户输入的值，是正常的还是异常的，给个状态\r\n        statusCheck(data) {\r\n            // 用户输入的值\r\n            const inputValue = data.value;\r\n            // 正常值范围\r\n            const valueRange = data.valueRange;\r\n            if (valueRange !== null && inputValue !== null) {\r\n                const aryValueRange = valueRange.split(',');\r\n                const minValue = aryValueRange[0];\r\n                const maxValue = aryValueRange[1];\r\n                return (Number(inputValue) > Number(minValue) && Number(inputValue) < Number(maxValue))\r\n            }\r\n        },\r\n        // 批量删除数据\r\n        async batchDelete() {\r\n            if (!this.selectedRows.length) {\r\n                this.$message(`未选中任何数据`);\r\n                return;\r\n            }\r\n            const confirmed = await this.$swalConfirm({\r\n                title: '删除健康记录数据',\r\n                text: `删除后不可恢复，是否继续？`,\r\n                icon: 'warning',\r\n            });\r\n            if (confirmed) {\r\n                try {\r\n                    let ids = this.selectedRows.map(entity => entity.id);\r\n                    const response = await this.$axios.post(`/user-health/batchDelete`, ids);\r\n                    if (response.data.code === 200) {\r\n                        this.$swal.fire({\r\n                            title: '删除提示',\r\n                            text: response.data.msg,\r\n                            icon: 'success',\r\n                            showConfirmButton: false,\r\n                            timer: 2000,\r\n                        });\r\n                        this.fetchFreshData();\r\n                        return;\r\n                    }\r\n                } catch (e) {\r\n                    this.$swal.fire({\r\n                        title: '错误提示',\r\n                        text: e,\r\n                        icon: 'error',\r\n                        showConfirmButton: false,\r\n                        timer: 2000,\r\n                    });\r\n                    console.error(`用户健康记录信息删除异常：`, e);\r\n                }\r\n            }\r\n        },\r\n        // 点击查询之后，执行的一个函数\r\n        handleFilter() {\r\n            this.currentPage = 1;\r\n            this.fetchFreshData();\r\n        },\r\n        // 加载用户自己的健康记录数据\r\n        async fetchFreshData() {\r\n            try {\r\n                let startTime = null;\r\n                let endTime = null;\r\n                if (this.searchTime != null && this.searchTime.length === 2) {\r\n                    const [startDate, endDate] = await Promise.all(this.searchTime.map(date => date.toISOString()));\r\n                    startTime = `${startDate.split('T')[0]}T00:00:00`;\r\n                    endTime = `${endDate.split('T')[0]}T23:59:59`;\r\n                }\r\n                // 请求参数\r\n                const params = {\r\n                    current: this.currentPage,\r\n                    size: this.pageSize,\r\n                    startTime: startTime,\r\n                    endTime: endTime\r\n                };\r\n                console.log(JSON.stringify(params));\r\n                const response = await this.$axios.post('/user-health/queryUser', params);\r\n                const { data } = response;\r\n                this.tableData = data.data;\r\n                this.totalItems = data.total;\r\n            } catch (error) {\r\n                console.error('查询用户健康记录信息异常:', error);\r\n            }\r\n        },\r\n        // 点击输入框里面的清除按钮\r\n        handleFilterClear() {\r\n            this.filterText = '';\r\n            this.handleFilter();\r\n        },\r\n        // 多选框选中\r\n        handleSelectionChange(selection) {\r\n            this.selectedRows = selection;\r\n        },\r\n        // 条件重置\r\n        resetQueryCondition() {\r\n            this.searchTime = [];\r\n            this.healthModelConfigId = null;\r\n            this.fetchFreshData();\r\n        },\r\n        // 当前页切换\r\n        handleSizeChange(val) {\r\n            this.pageSize = val;\r\n            this.currentPage = 1;\r\n            this.fetchFreshData();\r\n        },\r\n        // 当前页跳转\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val;\r\n            this.fetchFreshData();\r\n        },\r\n        // 查询用户具体记录的值，指定时间范围内\r\n        loadUserModelHavaRecord() {\r\n            // 往后端什么？\r\n            this.$axios.get(`/user-health/timeQuery/${this.userHealthQueryDto.healthModelConfigId}/${this.userHealthQueryDto.time}`).then(response => {\r\n                const { data } = response;\r\n                if (data.code === 200) {\r\n                    // 拿到的数据，要做可视化处理\r\n                    this.values = data.data.map(entity => entity.value).reverse();\r\n                    this.dates = data.data.map(entity => entity.createTime).reverse();\r\n                }\r\n            })\r\n        },\r\n        // 模型选中方法\r\n        modelChange() {\r\n            this.loadUserModelHavaRecord();\r\n        },\r\n        // 表格里面的具体模型选中\r\n        modelUserChange() {\r\n            // 如果想用户直接选中，数据直接回来，就要用到这一个方法\r\n            this.fetchFreshData();\r\n        },\r\n        // 查询用户自己配置的模型以及全局模型\r\n        loadHealthModelConfig() {\r\n            this.$axios.post(\"/health-model-config/modelList\").then(response => {\r\n                const { data } = response;\r\n                if (data.code === 200) {\r\n                    this.usersHealthModelConfig = data.data;\r\n                    this.modelConfigList = data.data;\r\n                    this.defaultLoad();\r\n                }\r\n            })\r\n        },\r\n        // 默认加载\r\n        defaultLoad() {\r\n            this.userHealthQueryDto.healthModelConfigId = this.modelConfigList[3].id;\r\n            // 数少，查一年\r\n            this.userHealthQueryDto.time = 365;\r\n            this.loadUserModelHavaRecord();\r\n        },\r\n        // 折线图选择指定事件范围之后，返回的一个回调\r\n        onSelectedTime(time) {\r\n            this.userHealthQueryDto.time = time;\r\n            this.loadUserModelHavaRecord();\r\n        },\r\n        // 组件里面返回的数据\r\n        timeSelected() {\r\n\r\n        },\r\n        toRecord() {\r\n            this.$router.push('/record');\r\n        },\r\n    }\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.status-success {\r\n    display: inline-block;\r\n    padding: 1px 5px;\r\n    border-radius: 2px;\r\n    background-color: rgb(201, 237, 249);\r\n    color: rgb(111, 106, 196);\r\n    font-size: 12px;\r\n}\r\n\r\n.status-error {\r\n    display: inline-block;\r\n    padding: 1px 5px;\r\n    border-radius: 2px;\r\n    background-color: rgb(233, 226, 134);\r\n    color: rgb(131, 138, 142);\r\n    color: rgb(111, 106, 196);\r\n    font-size: 12px;\r\n}\r\n</style>"]}]}